{"version":3,"file":"static/js/820.75d84f32.chunk.js","mappings":"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","sources":["client/components/register/Wizard.jsx","client/components/register/registationSteps.jsx","client/components/register/register.jsx","client/Pages/RegisterPage.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form } from \"react-final-form\";\r\nexport default class Wizard extends React.Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  static Page = ({ children }) => children;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: 0,\r\n      values: props.initialValues || {},\r\n    };\r\n  }\r\n  next = (values) =>\r\n    this.setState((state) => ({\r\n      page: Math.min(state.page + 1, this.props.children.length - 1),\r\n      values,\r\n    }));\r\n\r\n  previous = () =>\r\n    this.setState((state) => ({\r\n      page: Math.max(state.page - 1, 0),\r\n    }));\r\n\r\n  /**\r\n   * NOTE: Both validate and handleSubmit switching are implemented\r\n   * here because 🏁 Redux Final Form does not accept changes to those\r\n   * functions once the form has been defined.\r\n   */\r\n\r\n  validate = (values) => {\r\n    const activePage = React.Children.toArray(this.props.children)[\r\n      this.state.page\r\n    ];\r\n    return activePage.props.validate ? activePage.props.validate(values) : {};\r\n  };\r\n\r\n  handleSubmit = (values) => {\r\n    const { children, onSubmit } = this.props;\r\n    const { page } = this.state;\r\n    const isLastPage = page === React.Children.count(children) - 1;\r\n    if (isLastPage) {\r\n      return onSubmit(values);\r\n    } else {\r\n      this.next(values);\r\n    }\r\n  };\r\n  getChildren = (children) => {\r\n    return Array.isArray(children) ? children?.filter((c) => c) : children;\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { page, values } = this.state;\r\n    const activePage = React.Children.toArray(children)[page];\r\n    const childrenArray = React.Children.toArray(this.getChildren(children));\r\n    const isLastPage = page === React.Children.count(children) - 1;\r\n    return (\r\n      <div className=\"col-md-12 col-lg-6 login-right\">\r\n        <div className=\"login-header\">\r\n          <div className=\"\">\r\n            <Form\r\n              initialValues={values}\r\n              validate={this.validate}\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n              {({ handleSubmit, submitting, values }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"step-list\">\r\n                    <ul>\r\n                      {childrenArray.length > 1 &&\r\n                        childrenArray.map((child, index) => (\r\n                          <li\r\n                            key={\r\n                              child.props?.label?.ar ||\r\n                              child.props.label ||\r\n                              index\r\n                            }\r\n                            // completed={page > index}\r\n                            onClick={() => {\r\n                              if (page > index) this.setState({ page: index });\r\n                            }}\r\n                          >\r\n                            <a\r\n                              className={\r\n                                page === index\r\n                                  ? \"active\"\r\n                                  : page > index\r\n                                  ? \"active-done\"\r\n                                  : \"\"\r\n                              }\r\n                            >\r\n                              {index + 1}\r\n                            </a>\r\n                          </li>\r\n                        ))}\r\n                    </ul>\r\n                  </div>\r\n\r\n                  {activePage}\r\n                  <div className=\"buttons\">\r\n                    {!isLastPage && (\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block btn-lg login-btn \"\r\n                      >\r\n                        continue\r\n                      </button>\r\n                    )}\r\n                    {isLastPage && (\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary btn-block btn-lg login-btn\"\r\n                        disabled={submitting}\r\n                      >\r\n                        Submit\r\n                        {submitting && (\r\n                          <span className=\"spinner-border spinner-border-sm mb-1 mx-1\"></span>\r\n                        )}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { useContext, useMemo } from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { InputField, Error } from \"common/components\";\r\nimport { CountryCity, required } from \"common\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { format, isValid } from \"date-fns\";\r\nimport female from \"../../assets/images/icons/female.png\";\r\nimport male from \"../../assets/images/icons/male.png\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport Wizard from \"./Wizard\";\r\nimport AppContext from \"store/app-store\";\r\n\r\nconst RegistrationSteps = (props) => {\r\n  const { getLang } = useContext(AppContext);\r\n  const navigate = useNavigate();\r\n  const optionsCountryList = useMemo(() => CountryCity.getCountriesList(), []);\r\n  console.log(\r\n    \"🚀 ~ file: registationSteps.jsx ~ line 16 ~ RegistrationSteps ~ CountryCity.getCountriesList()\",\r\n    CountryCity.getCountriesList()\r\n  );\r\n\r\n  const onSubmit = async (values) => {\r\n    //window.alert(JSON.stringify(values, 0, 2));\r\n    //setIsLoading(true);\r\n    // await sleep(1500);\r\n    const formValues = { ...props.values, ...values };\r\n    console.log(`onSubmit :: ${JSON.stringify(formValues, 0, 2)}`);\r\n\r\n    const response = await AuthService.register({\r\n      email: formValues.email,\r\n      password: formValues.password,\r\n      firstName: formValues.firstName,\r\n      lastName: formValues.lastName,\r\n      phone: formValues.mobile,\r\n      gender: formValues.gender,\r\n      nationality: formValues.nationality,\r\n      countryOfResidence: formValues.countryOfResidence,\r\n      cityOfResidence: formValues.cityOfResidence,\r\n      dateOfBirth: formValues.dateOfBirth,\r\n    });\r\n    //setMessage(!!response.message && response.message);\r\n    //setIsLoading(false);\r\n\r\n    if (!!!response.success && !response.success) {\r\n      // props.OnError({\r\n      //   messgeType: \"error\",\r\n      //   messageTitle: \"Warning\",\r\n      //   messageBody: !!response.message && response.message,\r\n      // });\r\n      props.OnError(!!response.message && response.message);\r\n    } else {\r\n      navigate(\"/\" + getLang() + \"/login\", {\r\n        ...values,\r\n        state: {\r\n          preStatus: \"success\",\r\n          loginBoldMsg: \"An email was sent to you!\",\r\n          loginMsg: \"please check your inbox to complete registration\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const initialValues = {\r\n    gender: \"\",\r\n    dateOfBirth: \"\",\r\n    nationality: \"\",\r\n    countryOfResidence: \"\",\r\n    cityOfResidence: \"\",\r\n  };\r\n\r\n  const SelectCities = ({ countery, children }) => (\r\n    <Field name={countery} subscription={{ value: true }}>\r\n      {({ input: { value } }) => (\r\n        <>\r\n          {CountryCity.getCitiesOfCountry(value).map((val, index) => (\r\n            <option key={index} value={val.name}>\r\n              {val.name}\r\n            </option>\r\n          ))}\r\n        </>\r\n      )}\r\n    </Field>\r\n  );\r\n\r\n  const RenderDatePicker = ({ name, input, input: { value, onChange } }) => {\r\n    return (\r\n      <DatePicker\r\n        maxDate={new Date()}\r\n        showYearDropdown\r\n        yearItemNumber={7}\r\n        name={name}\r\n        inline\r\n        onChange={(date) => {\r\n          // On Change, you should use final-form Field Input prop to change the value\r\n          if (isValid(date)) {\r\n            input.onChange(format(new Date(date), \"yyyy-MM-dd\"));\r\n          } else {\r\n            input.onChange(null);\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  const WizatForm = () => (\r\n    <Wizard initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Wizard.Page\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.gender) {\r\n            errors.gender = required;\r\n          }\r\n          return errors;\r\n        }}\r\n      >\r\n        <div className=\"text-center mt-2\">\r\n          <h3 className=\"mt-3 mb-5\">Select Your Gender</h3>\r\n          <Error name={\"gender\"} showerrorbeside=\"true\" />\r\n        </div>\r\n        <div className=\"select-gender-col mb-2\" style={{ textAlign: \"center\" }}>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-sm-6\">\r\n              <Field\r\n                id=\"male_radio\"\r\n                name=\"gender\"\r\n                value=\"Male\"\r\n                type=\"radio\"\r\n                component={InputField}\r\n                hideerror=\"true\"\r\n              />\r\n              <label htmlFor=\"male_radio\">\r\n                <span className=\"gender-icon\">\r\n                  <img\r\n                    src={male}\r\n                    style={{ borderRadius: \"5px\" }}\r\n                    alt=\"Male\"\r\n                  ></img>\r\n                </span>\r\n              </label>\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n              <Field\r\n                id=\"female_radio\"\r\n                name=\"gender\"\r\n                value=\"Female\"\r\n                type=\"radio\"\r\n                component={InputField}\r\n                hideerror=\"true\"\r\n              />\r\n              <label htmlFor=\"female_radio\">\r\n                <span className=\"gender-icon\">\r\n                  <img\r\n                    src={female}\r\n                    style={{ borderRadius: \"5px\" }}\r\n                    alt=\"Female\"\r\n                  ></img>\r\n                </span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wizard.Page>\r\n      <Wizard.Page\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.dateOfBirth) {\r\n            errors.dateOfBirth = \"Required\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n      >\r\n        <div className=\"text-center mt-2\">\r\n          <h3 className=\"mt-3 mb-5\">Date of Birth</h3>\r\n        </div>\r\n        <div className=\"text-center mt-2\">\r\n          <Field\r\n            name=\"dateOfBirth\"\r\n            component={RenderDatePicker}\r\n            hideerror=\"true\"\r\n          />\r\n          <Error name={\"dateOfBirth\"} showerrorbeside=\"true\" />\r\n        </div>\r\n      </Wizard.Page>\r\n      <Wizard.Page\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (!values.nationality) {\r\n            errors.nationality = required;\r\n          }\r\n          if (!values.countryOfResidence) {\r\n            errors.countryOfResidence = required;\r\n          }\r\n          if (!values.cityOfResidence) {\r\n            errors.cityOfResidence = required;\r\n          }\r\n          return errors;\r\n        }}\r\n      >\r\n        <>\r\n          <div className=\"text-center mt-2\">\r\n            <h3 className=\"mt-3 mb-5\">Nationality and Location</h3>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Nationality</label>\r\n            <Field\r\n              name=\"nationality\"\r\n              className=\"form-control select\"\r\n              component=\"select\"\r\n              showerrorbeside=\"true\"\r\n            >\r\n              <option value=\"\">Select Your Nationality</option>\r\n              {optionsCountryList.map((val, index) => (\r\n                <option key={index} value={val.isoCode}>\r\n                  {val.name}\r\n                </option>\r\n              ))}\r\n            </Field>\r\n            {/* <Field\r\n              name=\"nationality\"\r\n              component={ReactSelectAdapter}\r\n              options={optionsCountryList.map((val, index) => ({\r\n                value: val.isoCode,\r\n                label: val.name,\r\n              }))}\r\n            /> */}\r\n            <Error name={\"nationality\"} showerrorbeside=\"true\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Country of Residence</label>\r\n            <Field name=\"countryOfResidence\" showerrorbeside=\"true\">\r\n              {({ input, meta }) => {\r\n                return (\r\n                  <select\r\n                    className=\"form-control select\"\r\n                    {...input}\r\n                    onChange={(e) => {\r\n                      input.onChange(e); //final-form's onChange\r\n                      // console.log(e.target.value);\r\n                      //console.table(City.getCitiesOfCountry(e.target.value))\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select Your Country of Residence</option>\r\n                    {optionsCountryList.map((val, index) => (\r\n                      <option key={index} value={val.isoCode}>\r\n                        {val.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                );\r\n              }}\r\n            </Field>\r\n            <Error name={\"countryOfResidence\"} showerrorbeside=\"true\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>City of Residence</label>\r\n            <Field name=\"cityOfResidence\" showerrorbeside=\"true\">\r\n              {({ input, meta }) => {\r\n                return (\r\n                  <select\r\n                    className=\"form-control select\"\r\n                    {...input}\r\n                    onChange={(e) => {\r\n                      input.onChange(e); //final-form's onChange\r\n                    }}\r\n                  >\r\n                    <option value=\"\">Select Your Country of Residence</option>\r\n                    <SelectCities countery=\"countryOfResidence\" />\r\n                  </select>\r\n                );\r\n              }}\r\n            </Field>\r\n            <Error name={\"cityOfResidence\"} showerrorbeside=\"true\" />\r\n          </div>\r\n        </>\r\n      </Wizard.Page>\r\n    </Wizard>\r\n  );\r\n\r\n  return <WizatForm />;\r\n};\r\n\r\nexport default RegistrationSteps;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport { InputField, AlertDismissible, Error } from \"common/components\";\r\nimport { UserService } from \"client/services\";\r\nimport loginBanner from \"client/assets/images/login-banner.png\";\r\nimport RegistrationSteps from \"./registationSteps\";\r\n\r\nimport \"react-phone-number-input/style.css\";\r\n\r\nconst Register = (props) => {\r\n  const required = `Required`;\r\n  const [message, setMessage] = useState();\r\n  const [errorData, setErrorData] = useState(null);\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.body.classList.add(\"account-page\");\r\n    return () => {\r\n      document.body.classList.remove(\"account-page\");\r\n    };\r\n  }, []);\r\n\r\n  const validate = async (values) => {\r\n    const errors = {};\r\n    if (!values.firstName) {\r\n      errors.firstName = required;\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = required;\r\n    }\r\n    if (!values.email) {\r\n      errors.email = required;\r\n    } else if (\r\n      !values.email\r\n        .toLowerCase()\r\n        .match(\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        )\r\n    ) {\r\n      errors.email = \"Invalid Email format!\";\r\n    }\r\n\r\n    if (!values.mobile) {\r\n      errors.mobile = required;\r\n    }\r\n    if (!values.password) {\r\n      errors.password = required;\r\n    } else if (values.password.length < 6 || values.password.length >= 40) {\r\n      errors.password = \"Password length must be between 6 and 40\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    setErrorData(null);\r\n    setIsLoading(true);\r\n    // // await sleep(1500);\r\n    console.log(`onSubmit :: ${JSON.stringify(values, 0, 2)}`);\r\n    const response = await UserService.isUserRegistered(values.email); //await AuthService.register(values.email, values.password);\r\n    setIsLoading(false);\r\n\r\n    if (!!!response.success && !response.success) {\r\n      setMessage(!!response.message && response.message);\r\n      return;\r\n    }\r\n\r\n    //open the wizard\r\n    setFormValues(values);\r\n\r\n    //navigate(\"/login\", { ...values });\r\n  };\r\n\r\n  const PhoneAdapter = ({ input, placeholder }) => (\r\n    <PhoneInput\r\n      className=\"form-control floating\"\r\n      {...input}\r\n      placeholder={placeholder}\r\n      Style=\"border:0px;\"\r\n    />\r\n  );\r\n  const errorHandle = (errData) => {\r\n    setFormValues(null);\r\n    setMessage(errData);\r\n  };\r\n  const myForm = (\r\n    <Form\r\n      validate={validate}\r\n      onSubmit={onSubmit}\r\n      // initialValues={{ doctorData }}\r\n      render={({\r\n        handleSubmit,\r\n        submitError,\r\n        form,\r\n        submitting,\r\n        pristine,\r\n        values,\r\n      }) => (\r\n        <div className=\"col-md-12 col-lg-6 login-right\">\r\n          <div className=\"login-header\">\r\n            <h3>Register to Your Medical Portal</h3>\r\n          </div>\r\n          <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n            <div className=\"invalid-feedback d-block mb-2\">{message}</div>\r\n            <div className=\"row form-row\" style={{ marginBottom: \"-20px\" }}>\r\n              <div className=\"col-12 col-sm-6\">\r\n                <div\r\n                  className={`form-group form-focus mt-4 ${\r\n                    values?.firstName?.length > 0 ? \"focused\" : \"\"\r\n                  }`}\r\n                >\r\n                  <Field\r\n                    name=\"firstName\"\r\n                    className=\"form-control floating\"\r\n                    label=\"First Name\"\r\n                    type=\"text\"\r\n                    label_type=\"focus_label\"\r\n                    component={InputField}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 col-sm-6\">\r\n                <div\r\n                  className={`form-group form-focus mt-4 ${\r\n                    values?.lastName?.length > 0 ? \"focused\" : \"\"\r\n                  }`}\r\n                >\r\n                  <Field\r\n                    name=\"lastName\"\r\n                    className=\"form-control floating\"\r\n                    label=\"Last Name\"\r\n                    type=\"text\"\r\n                    label_type=\"focus_label\"\r\n                    component={InputField}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={`form-group form-focus mt-4 ${\r\n                values?.email?.length > 0 ? \"focused\" : \"\"\r\n              }`}\r\n            >\r\n              <Field\r\n                name=\"email\"\r\n                className=\"form-control floating\"\r\n                label=\"Email\"\r\n                type=\"text\"\r\n                label_type=\"focus_label\"\r\n                component={InputField}\r\n              />\r\n            </div>\r\n            <div\r\n              className={`form-group form-focus mt-4 ${\r\n                values?.mobile?.length > 0 ? \"focused\" : \"\"\r\n              }`}\r\n            >\r\n              {/* <Field\r\n                name=\"mobile\"\r\n                className=\"form-control\"\r\n                label=\"Mobile Number\"\r\n                type=\"text\"\r\n                label_type=\"focus_label\"\r\n                component={InputField}\r\n              /> */}\r\n              <Field\r\n                name=\"mobile\"\r\n                defaultCountry=\"TR\"\r\n                international\r\n                className=\"form-control floating\"\r\n                placeholder=\"Enter phone number\"\r\n                label=\"Mobile Number\"\r\n                label_type=\"focus_label\"\r\n                component={PhoneAdapter}\r\n              />\r\n              <Error name={\"mobile\"} showerrorbeside=\"true\" />\r\n            </div>\r\n            <div\r\n              className={`form-group form-focus mt-4 ${\r\n                values?.password?.length > 0 ? \"focused\" : \"\"\r\n              }`}\r\n            >\r\n              <Field\r\n                name=\"password\"\r\n                className=\"form-control floating\"\r\n                label=\"Create Password\"\r\n                type=\"password\"\r\n                label_type=\"focus_label\"\r\n                component={InputField}\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"btn btn-primary btn-block btn-lg login-btn  mt-5\"\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n            >\r\n              {!isLoading ? `Signup` : \"\"}\r\n              {isLoading && (\r\n                <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n              )}\r\n            </button>\r\n            {/* Social Medica Login */}\r\n            {/* <div className=\"login-or\">\r\n    <span className=\"or-line\"></span>\r\n    <span className=\"span-or\">or</span>\r\n  </div>\r\n  <div className=\"row form-row social-login\">\r\n    <div className=\"col-6\">\r\n      <a href=\"#0\" className=\"btn btn-facebook btn-block\">\r\n        <i className=\"fab fa-facebook-f mr-1\"></i> Login\r\n      </a>\r\n    </div>\r\n    <div className=\"col-6\">\r\n      <a href=\"#0\" className=\"btn btn-google btn-block\">\r\n        <i className=\"fab fa-google mr-1\"></i> Login\r\n      </a>\r\n    </div>\r\n  </div> */}\r\n            {/* /Social Medica Login */}\r\n            <div className=\"text-center dont-have\">\r\n              {`Already have an account? `}\r\n              <Link to=\"/login\">Login</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    />\r\n  );\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 offset-md-2\">\r\n            <div className=\"account-content\">\r\n              {errorData && (\r\n                <AlertDismissible\r\n                  type={errorData.messgeType}\r\n                  boldMsg={errorData.messageTitle}\r\n                  msg={errorData.messageBody}\r\n                />\r\n              )}\r\n              <div className=\"row align-items-center justify-content-center\">\r\n                <div className=\"col-md-7 col-lg-6 login-left\">\r\n                  <img\r\n                    src={loginBanner}\r\n                    className=\"img-fluid\"\r\n                    alt=\"Register to Your Medical Portal\"\r\n                  />\r\n                </div>\r\n                {formValues === null ? (\r\n                  <>{myForm}</>\r\n                ) : (\r\n                  <RegistrationSteps\r\n                    values={formValues}\r\n                    OnError={errorHandle}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport Register from \"../components/register/register\";\r\n\r\nfunction RegisterPage() {\r\n  return <Register />;\r\n}\r\nexport default RegisterPage;"],"names":["Wizard","props","next","values","setState","state","page","Math","min","children","length","previous","max","validate","activePage","React","handleSubmit","onSubmit","getChildren","Array","isArray","filter","c","initialValues","this","childrenArray","isLastPage","className","submitting","map","child","index","onClick","label","ar","type","disabled","Page","getLang","useContext","AppContext","navigate","useNavigate","optionsCountryList","useMemo","CountryCity","console","log","formValues","JSON","stringify","AuthService","email","password","firstName","lastName","phone","mobile","gender","nationality","countryOfResidence","cityOfResidence","dateOfBirth","response","success","preStatus","loginBoldMsg","loginMsg","OnError","message","SelectCities","countery","name","subscription","value","input","val","RenderDatePicker","onChange","maxDate","Date","showYearDropdown","yearItemNumber","inline","date","isValid","format","WizatForm","errors","required","showerrorbeside","style","textAlign","id","component","InputField","hideerror","htmlFor","src","male","borderRadius","alt","female","isoCode","meta","e","useState","setMessage","errorData","setErrorData","setFormValues","isLoading","setIsLoading","useEffect","document","body","classList","add","remove","toLowerCase","match","UserService","PhoneAdapter","placeholder","Style","myForm","render","submitError","form","pristine","noValidate","marginBottom","label_type","defaultCountry","international","to","messgeType","boldMsg","messageTitle","msg","messageBody","loginBanner","errData"],"sourceRoot":""}