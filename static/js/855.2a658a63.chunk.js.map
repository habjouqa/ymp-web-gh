{"version":3,"file":"static/js/855.2a658a63.chunk.js","mappings":"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","sources":["admin/components/Cities/AddUpdateForm.jsx","admin/components/Cities/index.jsx","admin/Pages/CitiesPage.js","admin/services/attachment.service.js","admin/services/cities.service.js","admin/services/countries.service.js","admin/services/doctors.service.js","admin/services/facilities.service.js","admin/services/speciality.service.js","admin/services/treatments.service.js","admin/services/users.service.js","client/components/dashboard/sidebar/menuItems.jsx","client/components/dashboard/sidebar/sidebar.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { CountryService, CityService, AttachmentService } from \"admin/services\";\r\nimport { FileField, InputField, Error } from \"common/components\";\r\nimport { PageMode, required } from \"common\";\r\n\r\nfunction AddUpdateForm(props) {\r\n  const [t, i18next] = useTranslation();\r\n  const { mode, selectedCity, onClose } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isCountryLoading, setIsCountryLoading] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [countriesData, setCountriesData] = useState();\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n  const [image, setImage] = useState();\r\n  const [uploadImage, setUploadImage] = useState(true);\r\n\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  useEffect(async () => {\r\n    setIsCountryLoading(true);\r\n    if (mode === PageMode.Update && selectedCity?.attachment?.id) {\r\n      setImageLoading(true);\r\n    }\r\n\r\n    const response = await CountryService.getAllCountries();\r\n    setMessage(!!response?.message && response?.message);\r\n    if (response.success) {\r\n      setCountriesData(response.body);\r\n    }\r\n    setIsCountryLoading(false);\r\n\r\n    if (mode === PageMode.Update && selectedCity?.attachment?.id) {\r\n      const responseAttachment = await AttachmentService.getAttachmentById(\r\n        selectedCity?.attachment?.id\r\n      );\r\n      if (responseAttachment.success) {\r\n        setImage(responseAttachment.body);\r\n        setUploadImage(false);\r\n      } else setImage(null);\r\n      setImageLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = async (values) => {\r\n    console.log(`onSubmit :: ${JSON.stringify(values, 0, 2)}`);\r\n    setIsLoading(true);\r\n    const cityData = {\r\n      name: values.name,\r\n      country: values.country,\r\n      details: values.details,\r\n      active: mode === PageMode.Update ? values.active : true,\r\n    };\r\n    let response;\r\n    let requestData = new FormData();\r\n    requestData.append(\"request\", JSON.stringify(cityData, 0, 2));\r\n    if (uploadImage) requestData.append(\"image\", values.image[0]);\r\n\r\n    if (mode === PageMode.Update) {\r\n      response = await CityService.updateCity(selectedCity?.id, requestData);\r\n    } else {\r\n      response = await CityService.createCity(requestData);\r\n    }\r\n\r\n    if (!!!response.success && !response.success) {\r\n      setMessage(!!response.message && response.message);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    setIsLoading(false);\r\n    onClose(response.body);\r\n  };\r\n\r\n  const validate = async (values) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = required;\r\n    }\r\n    if (!values.country) {\r\n      errors.country = required;\r\n    }\r\n    if (!values.details) {\r\n      errors.details = required;\r\n    }\r\n    if (!values.image && uploadImage) {\r\n      errors.image = required;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  let form = (\r\n    <Form\r\n      validate={validate}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        name: selectedCity?.name,\r\n        country: selectedCity?.countryId,\r\n        details: selectedCity?.details,\r\n        image: selectedCity?.image,\r\n      }}\r\n      render={({\r\n        handleSubmit,\r\n        onChange,\r\n        submitError,\r\n        form,\r\n        submitting,\r\n        pristine,\r\n        values,\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          {message && (\r\n            <div className=\"invalid-feedback d-block mb-2\">{message}</div>\r\n          )}\r\n          <div className=\"row form-row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>{t(\"City.Country\")}</label>\r\n                <Field name=\"country\" showerrorbeside=\"true\">\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        {...input.select}\r\n                        defaultValue={values.country}\r\n                        value={values.country}\r\n                        onChange={(e) => {\r\n                          input.onChange(e);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">\r\n                          {isCountryLoading === true\r\n                            ? t(\"loading\")\r\n                            : t(\"City.SelectCountry\")}\r\n                        </option>\r\n                        {countriesData?.map((val, index) => (\r\n                          <option key={index} value={val.id}>\r\n                            {val.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    );\r\n                  }}\r\n                </Field>\r\n                <Error name={\"country\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>{t(\"City.Name\")}</label>\r\n                <Field\r\n                  name=\"name\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row form-row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                {imageLoading ? (\r\n                  <CircularProgress />\r\n                ) : mode === PageMode.Update && image && !uploadImage ? (\r\n                  <>\r\n                    <img src={image?.fileUrl} alt={\"image\"} width={250} />\r\n                    <span\r\n                      title=\"remove\"\r\n                      onClick={() => setUploadImage(true)}\r\n                      style={{ cursor: \"pointer\", marginTop: \"44px\" }}\r\n                    >\r\n                      ❌\r\n                    </span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <label>{t(\"Country.Image\")}</label>\r\n                    <FileField name=\"image\" />\r\n                    <Error name={\"image\"} showerrorbeside=\"true\" />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>{t(\"Country.Details\")}</label>\r\n                <Field\r\n                  name=\"details\"\r\n                  className=\"form-control\"\r\n                  type=\"textarea\"\r\n                  rows=\"4\"\r\n                  placeholder=\"Write here the details...\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"submit-section\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary submit-btn\"\r\n              disabled={isLoading}\r\n            >\r\n              {!isLoading ? t(`City.Save`) : \"\"}\r\n              {isLoading && (\r\n                <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n              )}\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary submit-btn\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                onClose(null);\r\n              }}\r\n            >\r\n              {t(\"City.Close\")}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n\r\n  return <div>{form}</div>;\r\n}\r\nexport default AddUpdateForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport StickyBox from \"react-sticky-box\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DashboardSidebar from \"client/components/dashboard/sidebar/sidebar.jsx\";\r\nimport { CityService } from \"admin/services\";\r\nimport { DataTable } from \"common/components\";\r\nimport { PageMode, TableInputType } from \"common\";\r\nimport AddUpdateForm from \"./AddUpdateForm\";\r\n\r\nconst CitiesList = () => {\r\n  const [t] = useTranslation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [messageDelete, setMessageDelete] = useState();\r\n  const [citiesData, setCitiesData] = useState();\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [mode, setMode] = useState(PageMode.Add);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setShowSuccess(false);\r\n  };\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleShowDelete = () => {\r\n    setShowDelete(true);\r\n    setShowSuccess(false);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setLoading(true);\r\n    const response = await CityService.getAllCities();\r\n    setMessage(!!response?.message && response?.message);\r\n    if (response.success) {\r\n      setCitiesData(\r\n        response.body?.map((s) => {\r\n          return {\r\n            ...s,\r\n            countryName: s.country.name,\r\n            countryId: s.country.id,\r\n          };\r\n        })\r\n      );\r\n    }\r\n\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const deleteCityHandler = async (id) => {\r\n    setDeleting(true);\r\n\r\n    const response = await CityService.deleteCity(id);\r\n\r\n    setDeleting(false);\r\n    if (!!!response.success && !response.success) {\r\n      setMessageDelete(!!response.message && response.message);\r\n      return;\r\n    }\r\n    handleCloseDelete();\r\n    setCitiesData(citiesData.filter((u) => u.id != id));\r\n\r\n    if (!!!response.success && !response.success) {\r\n      setMessage(!!response?.message && response?.message);\r\n      // To-Do: implemet error msg\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const updateCityStatusHandler = async (id, active) => {\r\n    setLoading(true);\r\n    let requestData = new FormData();\r\n    const cityData = {\r\n      active: !active,\r\n    };\r\n    requestData.append(\"request\", JSON.stringify(cityData, 0, 2));\r\n    const response = await CityService.updateCity(id, requestData);\r\n\r\n    if (!!!response.success && !response.success) {\r\n      // To-Do: implemet error msg\r\n      setMessage(!!response?.message && response?.message);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    setCitiesData(\r\n      citiesData?.map((s) => {\r\n        return s.id === response?.body?.id\r\n          ? { ...s, active: response?.body?.active }\r\n          : s;\r\n      })\r\n    );\r\n    setLoading(false);\r\n  };\r\n  const columns = [\r\n    { id: \"countryName\", label: t(\"City.Country\") },\r\n    { id: \"name\", label: t(\"City.Name\") },\r\n    { id: \"active\", label: t(\"City.Active\"), type: TableInputType.Toggle },\r\n  ];\r\n  let tableContent = (\r\n    <DataTable\r\n      columns={columns}\r\n      rows={citiesData}\r\n      showActions={true}\r\n      onEdit={(city) => {\r\n        handleShow();\r\n        setSelectedCity(city);\r\n        setMode(PageMode.Update);\r\n      }}\r\n      onDelete={(city) => {\r\n        handleShowDelete();\r\n        setSelectedCity(city);\r\n        setMessageDelete(null);\r\n      }}\r\n      onUpdateStatus={(city) => {\r\n        updateCityStatusHandler(city.id, city.active);\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\r\n              <StickyBox offsetTop={20} offsetBottom={20}>\r\n                <DashboardSidebar />\r\n              </StickyBox>\r\n            </div>\r\n            <div className=\"col-md-7 col-lg-8 col-xl-9\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title float-left\">\r\n                        {t(\"City.ListTitle\")}\r\n                      </h4>\r\n                      <button\r\n                        className=\"btn btn-primary float-right\"\r\n                        onClick={() => {\r\n                          handleShow();\r\n                          setSelectedCity(null);\r\n                          setMode(PageMode.Add);\r\n                        }}\r\n                        data-toggle=\"modal\"\r\n                      >\r\n                        {t(\"City.Add\")}\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"card-body \">\r\n                      <div className=\"card card-table mb-0\">\r\n                        <div className=\"card-body\">\r\n                          <div className=\"table-responsive\">\r\n                            <div className=\"invalid-feedback d-block mb-2\">\r\n                              {message}\r\n                            </div>\r\n                            {loading ? (\r\n                              <div className=\"centered\">\r\n                                <h4>\r\n                                  <div>\r\n                                    <CircularProgress />\r\n                                  </div>\r\n                                  <div>\r\n                                    <span style={{ color: \"#15558d\" }}>\r\n                                      {t(\"City.GettingCities\")}\r\n                                    </span>\r\n                                  </div>\r\n                                </h4>\r\n                              </div>\r\n                            ) : (\r\n                              <>\r\n                                {showSuccess ? (\r\n                                  <div style={{ margin: \"20px\" }}>\r\n                                    <Alert severity=\"success\">\r\n                                      {mode === PageMode.Add\r\n                                        ? t(\"City.AddingSuccessfullyMessage\")\r\n                                        : t(\"City.UpdatingSuccessfullyMessage\")}\r\n                                    </Alert>\r\n                                  </div>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                                {tableContent}\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        scrollable={true}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">{`${t(mode)} ${t(\"City.City\")}`}</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleClose}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            <div>\r\n              <AddUpdateForm\r\n                selectedCity={selectedCity}\r\n                mode={mode}\r\n                onClose={(city) => {\r\n                  handleClose();\r\n                  if (city) {\r\n                    console.log(\r\n                      \"🚀 ~ file: index.jsx ~ line 204 ~ CitiesList ~ city\",\r\n                      city\r\n                    );\r\n                    if (mode === PageMode.Update) {\r\n                      const updatedCity = citiesData.map((u) => {\r\n                        return u.id === city.id\r\n                          ? {\r\n                              ...city,\r\n                              countryName: city.country.name,\r\n                              countryId: city.country.id,\r\n                            }\r\n                          : u;\r\n                      });\r\n                      setCitiesData(updatedCity);\r\n                    } else {\r\n                      const addedCounrtry = {\r\n                        ...city,\r\n                        countryName: city.country.name,\r\n                        countryId: city.country.id,\r\n                      };\r\n                      setCitiesData([...citiesData, addedCounrtry]);\r\n                    }\r\n                    setShowSuccess(true);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showDelete}\r\n        onHide={handleCloseDelete}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">{t(\"City.DeleteConfirmationTitle\")}</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleCloseDelete}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            {messageDelete && (\r\n              <div className=\"invalid-feedback d-block mb-2\">\r\n                {messageDelete}\r\n              </div>\r\n            )}\r\n            <h5 style={{ color: \"red\" }}>\r\n              {t(\"City.DeleteConfirmationMessage\")}\r\n            </h5>\r\n            <div>\r\n              <b>{t(\"City.City\")}:</b>\r\n              {` ${selectedCity?.name} `}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            className=\"btn btn-danger submit-btn\"\r\n            disabled={deleting}\r\n            onClick={() => {\r\n              deleteCityHandler(selectedCity.id);\r\n            }}\r\n          >\r\n            {!deleting ? t(`City.Delete`) : \"\"}\r\n            {deleting && (\r\n              <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n            )}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary submit-btn\"\r\n            onClick={handleCloseDelete}\r\n          >\r\n            {t(\"City.Close\")}\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default CitiesList;\r\n","import React from \"react\";\r\nimport CitiesList from \"../components/Cities/index\";\r\n\r\nfunction CitiesPage() {\r\n  return <CitiesList />;\r\n}\r\nexport default CitiesPage;","import { APIFilesRequest } from \"common\";\r\n\r\nconst getAttachmentById = (attachmentId) => {\r\n  const url = `${process.env.REACT_APP_YMP_API}/api/v1/attachment/${attachmentId}`;\r\n  return APIFilesRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst AttachmentService = {\r\n  getAttachmentById,\r\n};\r\n\r\nexport default AttachmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst City_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/city`;\r\n\r\nconst getAllCities = () => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCityByID = (CityId) => {\r\n  const url = `${City_API_URL}/${CityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCity = (data) => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCity = (CityID, data) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCity = (CityID) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CityService = {\r\n  getAllCities,\r\n  getCityByID,\r\n  createCity,\r\n  updateCity,\r\n  deleteCity,\r\n};\r\n\r\nexport default CityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Country_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/country`;\r\n\r\nconst getAllCountries = () => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCountryByID = (countryId) => {\r\n  const url = `${Country_API_URL}/${countryId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCountry = (data) => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCountry = (countryID, data) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCountry = (countryID) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CountryService = {\r\n  getAllCountries,\r\n  getCountryByID,\r\n  createCountry,\r\n  updateCountry,\r\n  deleteCountry,\r\n};\r\n\r\nexport default CountryService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Doctor_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/doctor`;\r\n\r\nconst getAllDoctors = (page, size) => {\r\n  const url = `${Doctor_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getDoctorByID = (doctorId) => {\r\n  const url = `${Doctor_API_URL}/${doctorId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createDoctor = (doctorData) => {\r\n  const url = Doctor_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst updateDoctor = (doctorID, doctorData) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst deleteDoctor = (doctorID) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst DoctorService = {\r\n  getAllDoctors,\r\n  getDoctorByID,\r\n  createDoctor,\r\n  updateDoctor,\r\n  deleteDoctor,\r\n};\r\n\r\nexport default DoctorService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Facility_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/facility`;\r\n\r\nconst getAllFacilities = () => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getFacilityByID = (FacilityId) => {\r\n  const url = `${Facility_API_URL}/${FacilityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createFacility = (data) => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateFacility = (FacilityID, data) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteFacility = (FacilityID) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst FacilityService = {\r\n  getAllFacilities,\r\n  getFacilityByID,\r\n  createFacility,\r\n  updateFacility,\r\n  deleteFacility,\r\n};\r\n\r\nexport default FacilityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Speciality_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/speciality`;\r\n\r\nconst getAllSpecialitiesWithPagination = (page, size) => {\r\n  const url = `${Speciality_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getAllSpecialities = () => {\r\n  const url = `${Speciality_API_URL}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getSpecialityByID = (specialityId) => {\r\n  const url = `${Speciality_API_URL}/${specialityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createSpeciality = (specialityData) => {\r\n  const url = Speciality_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst updateSpeciality = (specialityID, specialityData) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst deleteSpeciality = (specialityID) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst SpecialityService = {\r\n  getAllSpecialitiesWithPagination,\r\n  getAllSpecialities,\r\n  getSpecialityByID,\r\n  createSpeciality,\r\n  updateSpeciality,\r\n  deleteSpeciality,\r\n};\r\n\r\nexport default SpecialityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Treatment_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/treatment`;\r\n\r\nconst getAllTreatments = () => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getTreatmentByID = (TreatmentId) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createTreatment = (data) => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateTreatment = (TreatmentID, data) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteTreatment = (TreatmentID) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst TreatmentService = {\r\n  getAllTreatments,\r\n  getTreatmentByID,\r\n  createTreatment,\r\n  updateTreatment,\r\n  deleteTreatment,\r\n};\r\n\r\nexport default TreatmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst User_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/user`;\r\n\r\nconst getAllUsers = (page, size) => {\r\n  const url = `${User_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByID = (userId) => {\r\n  const url = `${User_API_URL}/id/${userId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByEmail = (email) => {\r\n  const url = `${User_API_URL}/email/${email}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createUser = (userData) => {\r\n  const url = User_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst updateUser = (userID, userData) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst deleteUser = (userID) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst UserService = {\r\n  getAllUsers,\r\n  getUserByID,\r\n  createUser,\r\n  updateUser,\r\n  deleteUser,\r\n  getUserByEmail,\r\n};\r\n\r\nexport default UserService;\r\n","import { useTranslation } from \"react-i18next\";\r\nexport const adminMenuItems = (t, customActions = {}) => [\r\n  {\r\n    path: \"/en/account-profile\",\r\n    icon: \"fas fa-user-cog\",\r\n    label: t(\"ProfileSettings\"),\r\n    role: \"all\",\r\n  },\r\n  {\r\n    path: \"/en/account-appointments\",\r\n    icon: \"fas fa-calendar-alt\",\r\n    label: t(\"Appointments\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/specialities\",\r\n    icon: \"fas fa-stethoscope\",\r\n    label: t(\"Specialities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Doctors\",\r\n    icon: \"fas fa-users\",\r\n    label: t(\"Doctors\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Users\",\r\n    icon: \"fas fa-users\",\r\n    label: t(\"Users\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Countries\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Countries\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Cities\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Cities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Facilities\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Facilities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Treatments\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Treatments\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/account-change-password\",\r\n    icon: \"fas fa-lock\",\r\n    label: t(\"ChangePassword\"),\r\n    role: \"all\",\r\n  },\r\n  {\r\n    path: \"/\",\r\n    icon: \"fas fa-lock\",\r\n    label: t(\"logout\"),\r\n    role: \"all\",\r\n    onClick: customActions.logout,\r\n  },\r\n];\r\n","import AVATAR from \"client/assets/images/icons/male.png\";\r\nimport { UserService } from \"client/services\";\r\nimport { CountryCity } from \"common\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { adminMenuItems } from \"./menuItems\";\r\nimport { AuthService } from \"client/services\";\r\n\r\nexport const DashboardSidebar = () => {\r\n  const [t, i18nextLng] = useTranslation();\r\n  const pathname = window.location.pathname;\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [isLoggedIn, setIsLoggedIn] = useState();\r\n\r\n  const lang = \"en\";\r\n  useEffect(() => {\r\n    const fetchCurrentUser = async () => {\r\n      try {\r\n        const response = await UserService.getCurrentUser();\r\n        setCurrentUser(response?.body);\r\n      } catch (error) {\r\n        console.log(\"Error fetching current user:\", error);\r\n      }\r\n    };\r\n    fetchCurrentUser();\r\n  }, []);\r\n\r\n  const renderMenuItem = (item, index) => {\r\n    const shouldRenderItem =\r\n      item.role === \"all\" ||\r\n      (currentUser?.roles?.some((role) => role?.name === \"ROLE_ADMIN\") &&\r\n        item?.role === \"ROLE_ADMIN\");\r\n    if (!shouldRenderItem) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <li key={index} className={pathname.includes(item.path) ? \"active\" : \"\"}>\r\n        <Link\r\n          to={item.path}\r\n          onClick={(e) => {\r\n            if (item.onClick) {\r\n              e.preventDefault(); // Prevent default link behavior if there's an onClick\r\n              item.onClick(); // Call the function if it exists\r\n            }\r\n          }}\r\n        >\r\n          <i className={item.icon}></i>\r\n          <span>{item.label}</span>\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const customActions = {\r\n    logout: () => {\r\n      console.log(\"Logging out...\");\r\n      AuthService.logout();\r\n      setIsLoggedIn(false);\r\n      navigate(\"/\");\r\n    },\r\n    // Add other custom actions as needed\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <div className=\"widget-profile pro-widget-content\">\r\n        <div className=\"profile-info-widget\">\r\n          <a href=\"#0\" className=\"booking-doc-img\">\r\n            <img src={AVATAR} alt=\"User\" />\r\n          </a>\r\n          <div className=\"profile-det-info\">\r\n            <h3>{currentUser?.email}</h3>\r\n            <div className=\"patient-details\">\r\n              <h5>\r\n                <i className=\"fas fa-birthday-cake\"></i>{\" \"}\r\n                {currentUser?.dateOfBirth &&\r\n                  moment(currentUser?.dateOfBirth).format(\"DD MMM YYYY\")}\r\n                ,{\" \"}\r\n                {currentUser?.dateOfBirth &&\r\n                  moment(currentUser?.dateOfBirth, \"YYYY-MM-DD\")\r\n                    .month(0)\r\n                    .from(moment().month(0))}\r\n              </h5>\r\n              <h5 className=\"mb-0\">\r\n                <i className=\"fas fa-map-marker-alt\"></i>\r\n                {currentUser?.cityOfResidence &&\r\n                  currentUser?.cityOfResidence},{\" \"}\r\n                {currentUser?.countryOfResidence &&\r\n                  CountryCity.getCountryOfCode(currentUser?.countryOfResidence)\r\n                    .name}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dashboard-widget\">\r\n        <nav className=\"dashboard-menu\">\r\n          <ul>{adminMenuItems(t, customActions).map(renderMenuItem)}</ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DashboardSidebar;\r\n"],"names":["props","useTranslation","t","mode","selectedCity","onClose","useState","isLoading","setIsLoading","isCountryLoading","setIsCountryLoading","message","setMessage","countriesData","setCountriesData","imageLoading","setImageLoading","image","setImage","uploadImage","setUploadImage","useEffect","PageMode","attachment","id","CountryService","response","success","body","AttachmentService","responseAttachment","onSubmit","values","console","log","JSON","stringify","cityData","name","country","details","active","requestData","FormData","append","CityService","validate","errors","required","form","initialValues","countryId","render","handleSubmit","onChange","submitError","submitting","pristine","className","noValidate","showerrorbeside","input","meta","select","defaultValue","value","e","map","val","index","type","component","InputField","CircularProgress","src","fileUrl","alt","width","title","onClick","style","cursor","marginTop","rows","placeholder","disabled","preventDefault","loading","setLoading","deleting","setDeleting","show","setShow","showDelete","setShowDelete","showSuccess","setShowSuccess","messageDelete","setMessageDelete","citiesData","setCitiesData","setSelectedCity","setMode","handleClose","handleShow","handleCloseDelete","s","countryName","deleteCityHandler","filter","u","updateCityStatusHandler","columns","label","TableInputType","tableContent","showActions","onEdit","city","onDelete","onUpdateStatus","offsetTop","offsetBottom","color","margin","Alert","severity","Modal","onHide","size","scrollable","updatedCity","addedCounrtry","centered","Cities","getAttachmentById","attachmentId","url","process","APIFilesRequest","method","City_API_URL","getAllCities","APIRequest","getCityByID","CityId","createCity","data","requestBody","updateCity","CityID","deleteCity","Country_API_URL","getAllCountries","getCountryByID","createCountry","updateCountry","countryID","deleteCountry","Doctor_API_URL","getAllDoctors","page","getDoctorByID","doctorId","createDoctor","doctorData","updateDoctor","doctorID","deleteDoctor","Facility_API_URL","getAllFacilities","getFacilityByID","FacilityId","createFacility","updateFacility","FacilityID","deleteFacility","Speciality_API_URL","getAllSpecialitiesWithPagination","getAllSpecialities","getSpecialityByID","specialityId","createSpeciality","specialityData","updateSpeciality","specialityID","deleteSpeciality","Treatment_API_URL","getAllTreatments","getTreatmentByID","TreatmentId","createTreatment","updateTreatment","TreatmentID","deleteTreatment","User_API_URL","getAllUsers","getUserByID","userId","createUser","userData","updateUser","userID","deleteUser","getUserByEmail","email","adminMenuItems","customActions","path","icon","role","logout","DashboardSidebar","pathname","window","location","currentUser","setCurrentUser","navigate","useNavigate","setIsLoggedIn","fetchCurrentUser","UserService","AuthService","href","AVATAR","dateOfBirth","moment","format","month","from","cityOfResidence","countryOfResidence","CountryCity","item","roles","some","includes","to"],"sourceRoot":""}