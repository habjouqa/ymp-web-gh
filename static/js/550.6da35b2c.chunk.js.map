{"version":3,"file":"static/js/550.6da35b2c.chunk.js","mappings":"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","sources":["admin/services/attachment.service.js","admin/services/cities.service.js","admin/services/countries.service.js","admin/services/doctors.service.js","admin/services/facilities.service.js","admin/services/speciality.service.js","admin/services/treatments.service.js","admin/services/users.service.js","webpack://ymp-react/./src/client/components/patients/treatments/wizard-steps/treatments/Treatment.module.css?06ed","client/components/patients/treatments/wizard-steps/treatments/Treatment.jsx","client/components/patients/treatments/wizard-steps/treatments/index.jsx","client/components/patients/treatments/wizard-steps/preferences/index.jsx","client/components/patients/treatments/wizard-steps/email/index.jsx","client/components/patients/treatments/Wizard.jsx","client/components/patients/treatments/index.jsx","client/Pages/TreatmentsPage.js"],"sourcesContent":["import { APIFilesRequest } from \"common\";\r\n\r\nconst getAttachmentById = (attachmentId) => {\r\n  const url = `${process.env.REACT_APP_YMP_API}/api/v1/attachment/${attachmentId}`;\r\n  return APIFilesRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst AttachmentService = {\r\n  getAttachmentById,\r\n};\r\n\r\nexport default AttachmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst City_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/city`;\r\n\r\nconst getAllCities = () => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCityByID = (CityId) => {\r\n  const url = `${City_API_URL}/${CityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCity = (data) => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCity = (CityID, data) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCity = (CityID) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CityService = {\r\n  getAllCities,\r\n  getCityByID,\r\n  createCity,\r\n  updateCity,\r\n  deleteCity,\r\n};\r\n\r\nexport default CityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Country_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/country`;\r\n\r\nconst getAllCountries = () => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCountryByID = (countryId) => {\r\n  const url = `${Country_API_URL}/${countryId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCountry = (data) => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCountry = (countryID, data) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCountry = (countryID) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CountryService = {\r\n  getAllCountries,\r\n  getCountryByID,\r\n  createCountry,\r\n  updateCountry,\r\n  deleteCountry,\r\n};\r\n\r\nexport default CountryService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Doctor_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/doctor`;\r\n\r\nconst getAllDoctors = (page, size) => {\r\n  const url = `${Doctor_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getDoctorByID = (doctorId) => {\r\n  const url = `${Doctor_API_URL}/${doctorId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createDoctor = (doctorData) => {\r\n  const url = Doctor_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst updateDoctor = (doctorID, doctorData) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst deleteDoctor = (doctorID) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst DoctorService = {\r\n  getAllDoctors,\r\n  getDoctorByID,\r\n  createDoctor,\r\n  updateDoctor,\r\n  deleteDoctor,\r\n};\r\n\r\nexport default DoctorService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Facility_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/facility`;\r\n\r\nconst getAllFacilities = () => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getFacilityByID = (FacilityId) => {\r\n  const url = `${Facility_API_URL}/${FacilityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createFacility = (data) => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateFacility = (FacilityID, data) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteFacility = (FacilityID) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst FacilityService = {\r\n  getAllFacilities,\r\n  getFacilityByID,\r\n  createFacility,\r\n  updateFacility,\r\n  deleteFacility,\r\n};\r\n\r\nexport default FacilityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Speciality_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/speciality`;\r\n\r\nconst getAllSpecialitiesWithPagination = (page, size) => {\r\n  const url = `${Speciality_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getAllSpecialities = () => {\r\n  const url = `${Speciality_API_URL}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getSpecialityByID = (specialityId) => {\r\n  const url = `${Speciality_API_URL}/${specialityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createSpeciality = (specialityData) => {\r\n  const url = Speciality_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst updateSpeciality = (specialityID, specialityData) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst deleteSpeciality = (specialityID) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst SpecialityService = {\r\n  getAllSpecialitiesWithPagination,\r\n  getAllSpecialities,\r\n  getSpecialityByID,\r\n  createSpeciality,\r\n  updateSpeciality,\r\n  deleteSpeciality,\r\n};\r\n\r\nexport default SpecialityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Treatment_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/treatment`;\r\n\r\nconst getAllTreatments = () => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getTreatmentByID = (TreatmentId) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createTreatment = (data) => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateTreatment = (TreatmentID, data) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteTreatment = (TreatmentID) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst TreatmentService = {\r\n  getAllTreatments,\r\n  getTreatmentByID,\r\n  createTreatment,\r\n  updateTreatment,\r\n  deleteTreatment,\r\n};\r\n\r\nexport default TreatmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst User_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/user`;\r\n\r\nconst getAllUsers = (page, size) => {\r\n  const url = `${User_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByID = (userId) => {\r\n  const url = `${User_API_URL}/id/${userId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByEmail = (email) => {\r\n  const url = `${User_API_URL}/email/${email}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createUser = (userData) => {\r\n  const url = User_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst updateUser = (userID, userData) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst deleteUser = (userID) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst UserService = {\r\n  getAllUsers,\r\n  getUserByID,\r\n  createUser,\r\n  updateUser,\r\n  deleteUser,\r\n  getUserByEmail,\r\n};\r\n\r\nexport default UserService;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"treatment-image\":\"Treatment_treatment-image__o3PlJ\"};","import React, { useEffect, useState } from \"react\";\r\nimport { Skeleton } from \"@mui/material\";\r\nimport { AttachmentService, TreatmentService } from \"client/services\";\r\nimport styles from \"./Treatment.module.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst getTreatmentSkeleton = () => (\r\n  <>\r\n    <div className=\"col-12 center\">\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton />\r\n    </div>\r\n    <div\r\n      className={`col-12 col-md-6 ${styles[\"treatment-image\"]}`}\r\n      hidden=\"true\"\r\n    >\r\n      <Skeleton\r\n        variant=\"rectangular\"\r\n        width={250}\r\n        height={167}\r\n        animation=\"wave\"\r\n      />\r\n    </div>\r\n  </>\r\n);\r\n\r\nconst Treatment = ({ treatment: { id, details, details_ar } }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [t, i18next] = useTranslation();\r\n\r\n  // don't show image\r\n  /*\r\n  useEffect(() => {\r\n    async function getTreatmentImage(treatment) {\r\n      setLoading(true);\r\n\r\n      const response = await TreatmentService.getTreatmentByID(treatment);\r\n      if (response.success) {\r\n        const responseAttachment = await AttachmentService.getAttachmentById(\r\n          response.body?.attachment?.id\r\n        );\r\n\r\n        if (responseAttachment.success) {\r\n          setImage(responseAttachment.body);\r\n        } else setImage(null);\r\n      } else setImage(null);\r\n\r\n      setLoading(false);\r\n    }\r\n\r\n    if (id) {\r\n      getTreatmentImage(id);\r\n    }\r\n  }, [id]);\r\n*/\r\n\r\n  return loading ? (\r\n    // (<CircularProgress />) :\r\n    getTreatmentSkeleton()\r\n  ) : (\r\n    // only show treatment details\r\n    <div className=\"col-12\">\r\n      {/* <p>{i18next.language === \"ar\" ? details_ar : details}</p> */}\r\n      <p\r\n        dangerouslySetInnerHTML={{\r\n          __html: i18next.language === \"ar\" ? details_ar : details,\r\n        }}\r\n      ></p>\r\n    </div>\r\n  );\r\n  // show treatment details and image\r\n  /*\r\n      (image && (\r\n        <>\r\n          <div className=\"col-12\">\r\n              <p>{details}</p>\r\n          </div>\r\n          <div className={`col-12 col-md-6 ${styles['treatment-image']}`} hidden={true}>\r\n            <img\r\n              src={image?.fileUrl}\r\n              alt={`${image?.name}${image.extension}`}\r\n              width={250}\r\n            />\r\n        </div>\r\n        </>\r\n      ))\r\n  */\r\n};\r\n\r\nexport default Treatment;\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Field } from \"react-final-form\";\r\nimport { Wizard, Error, OptionPlaceholder } from \"common/components\";\r\nimport { required } from \"common\";\r\nimport Treatment from \"./Treatment\";\r\n\r\nconst TreatmentsPage = (props) => {\r\n  const fieldName = \"treatment\";\r\n  //   const title = \"Treatments\";\r\n  const { errorMessage, data } = props;\r\n  const [t, i18next] = useTranslation();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.treatment) {\r\n      errors.treatment = required;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <Wizard.Page label={t(\"Treatments\")} validate={validate}>\r\n      {errorMessage}\r\n      <div className=\"row form-row\">\r\n        <Field name={fieldName} showerrorbeside=\"true\">\r\n          {({ input, meta }) => {\r\n            const treatment = data?.find((t) => t.id === parseInt(input.value));\r\n\r\n            return (\r\n              <>\r\n                <div className=\"col-12 col-md-12\">\r\n                  <div className=\"form-group\">\r\n                    { (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        {...input}\r\n                        onChange={(e) => {\r\n                          input.onChange(e);\r\n                        }}\r\n                        disabled={!data}\r\n                      >\r\n                        <OptionPlaceholder\r\n                          label={\r\n                            i18next.language === \"ar\"\r\n                              ? \"اختر العلاج\"\r\n                              : \"Select Treatment\"\r\n                          }\r\n                        />\r\n                        {data?.map((val, index) => (\r\n                          <option key={index} value={val.id}>\r\n                            {i18next.language === \"ar\" ? val.name_ar : val.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                {treatment && <Treatment treatment={treatment} />}\r\n              </>\r\n            );\r\n          }}\r\n        </Field>\r\n        <Error name={fieldName} showerrorbeside=\"true\" />\r\n      </div>\r\n    </Wizard.Page>\r\n  );\r\n};\r\n\r\nexport default TreatmentsPage;\r\n","import React from \"react\";\r\nimport { Field } from \"react-final-form\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  Tooltip,\r\n  IconButton,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport { Wizard, Error } from \"common/components\";\r\nimport { required, preferenceOptions_en, preferenceOptions_ar } from \"common\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst getPreferences = (fieldName, textLabel, lang) =>\r\n(lang === \"ar\" ? preferenceOptions_ar : preferenceOptions_en).map((prefOption, idx) => {\r\n    const { id, title, description, ...additionalLink } = prefOption;\r\n    return (\r\n      <div className=\"row form-row\" key={idx}>\r\n        <Field name={`${fieldName}.${id}`} id={id}>\r\n          {({ input, meta }) => (\r\n            <FormControlLabel\r\n              label={\r\n                <>\r\n                  {title}{\" \"}\r\n                  {!!additionalLink?.additionalLink ? (\r\n                    <>\r\n                      {\" \"}\r\n                      <a\r\n                        className=\"text-info\"\r\n                        href={additionalLink?.additionalLink?.link}\r\n                        target=\"_blank\"\r\n                      >\r\n                        ({textLabel} {additionalLink?.additionalLink?.name})\r\n                      </a>\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <Tooltip title={description} arrow>\r\n                    <IconButton>\r\n                      <InfoIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </>\r\n              }\r\n              // control={<Checkbox value={id} checked={input.value} onChange={(e) => { input.onChange(e.target.checked); }} />}\r\n              control={\r\n                <Checkbox\r\n                  value={id}\r\n                  checked={input.value}\r\n                  onChange={(e) => {\r\n                    input.onChange(e.target.checked);\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          )}\r\n        </Field>\r\n      </div>\r\n    );\r\n  });\r\n\r\nconst PreferencesPage = (props) => {\r\n  const [t, i18next] = useTranslation();\r\n  const fieldName = \"preferences\";\r\n  //   const title = \"Travel Preference\";\r\n  const { errorMessage } = props;\r\n\r\n  const validate = (values) => {\r\n    const {\r\n      preferences: { q1, q2, q3, q4, q5, q6 },\r\n    } = values;\r\n    const errors = {};\r\n    if (!values.preferences || (!q2 && !q3 && !q4 && !q5 && !q6)) {\r\n      errors.preferences = required;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <Wizard.Page\r\n      label={t(\"AppointmentsComponent.TravelPreferences\")}\r\n    >\r\n      {errorMessage}\r\n      <FormControl>\r\n        <FormLabel component=\"legend\">\r\n        {t(\"Treatment.SelectPreferenceMessage\")}\r\n        </FormLabel>\r\n        <FormGroup>\r\n          {getPreferences(fieldName, t(\"General.Check\"), i18next.language)}\r\n          <Error name={fieldName} showerrorbeside=\"true\" />\r\n        </FormGroup>\r\n      </FormControl>\r\n    </Wizard.Page>\r\n  );\r\n};\r\n\r\nexport default PreferencesPage;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Field } from \"react-final-form\";\r\nimport { Wizard, InputField } from \"common/components\";\r\nimport { required } from \"common\";\r\n\r\nconst emailRegex =\r\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nconst EmailPage = (props) => {\r\n  const fieldName = \"email\";\r\n  // const title = 'Communication';\r\n  const { errorMessage } = props;\r\n\r\n  const [t, i18next] = useTranslation();\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n      errors.email = required;\r\n    }\r\n\r\n    if (!emailRegex.test(values.email)) {\r\n      errors.email = t(\"Validations.invalid-email\");\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <Wizard.Page\r\n      label={t(\"AppointmentsComponent.Communication\")}\r\n      validate={validate}\r\n    >\r\n      {errorMessage && (\r\n        <div\r\n          className=\"invalid-feedback d-block mb-2\"\r\n          style={{\r\n            margin:\r\n              i18next.language === \"en\" ? \"10px 0 0 15px\" : \"10px 15px 0 0\",\r\n          }}\r\n        >\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n      <div className=\"row form-row\">\r\n        <div className=\"col-12 col-md-12\">\r\n          <div className=\"form-group mt-4\">\r\n            <p>{t(\"AppointmentsComponent.EnterEmailMessage\")}</p>\r\n          </div>\r\n          <div className=\"form-group mt-4\">\r\n            <label>{t(\"AppointmentsComponent.Email\")}</label>\r\n            <Field\r\n              name={fieldName}\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              component={InputField}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Wizard.Page>\r\n  );\r\n};\r\n\r\nexport default EmailPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Wizard } from \"common/components\";\r\nimport { TreatmentService } from \"client/services\";\r\nimport { TreatmentsStep, PreferencesStep, EmailStep } from \"./wizard-steps\";\r\n\r\nconst showErrorMessage = (errorMessage, i18next) =>\r\n  errorMessage && (\r\n    <div\r\n      className=\"invalid-feedback d-block mb-2\"\r\n      style={{\r\n        margin: i18next.language === \"en\" ? \"10px 0 0 15px\" : \"10px 15px 0 0\",\r\n      }}\r\n    >\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n\r\nfunction TreatmentsWizard({ onSubmit, initialValues, errorMessage, lables }) {\r\n  const [t, i18next] = useTranslation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [treatmentsData, setTreatmentsData] = useState();\r\n\r\n  useEffect(() => {\r\n    document.body.classList.add(\"account-page\");\r\n    setLoading(true);\r\n    async function fetchData() {\r\n      const treatmentServiceResponse =\r\n        await TreatmentService.getAllTreatments();\r\n      setMessage(\r\n        !!treatmentServiceResponse?.message && treatmentServiceResponse?.message\r\n      );\r\n      if (treatmentServiceResponse.success) {\r\n        setTreatmentsData(\r\n          treatmentServiceResponse.body\r\n            ?.filter((t) => t.active === true)\r\n            ?.map((s) => {\r\n              return { ...s, active: s.active };\r\n            })\r\n        );\r\n      }\r\n\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n\r\n    // Anything in here is fired on component mount.\r\n    return () => {\r\n      // Anything in here is fired on component unmount.\r\n      document.body.classList.remove(\"account-page\");\r\n    };\r\n  }, []);\r\n\r\n  const onSubmitHandler = (values) => {\r\n    onSubmit(values);\r\n  };\r\n\r\n  // const getSelectedTreatment = (values) => treatmentsData?.find((t) => `${t.id}` === values.treatment);\r\n\r\n  const WizardForm = () => (\r\n    <Wizard\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmitHandler}\r\n      lables={{\r\n        next: i18next.language === \"ar\" ? \"التالي\" : \"Next\",\r\n        previous: i18next.language === \"ar\" ? \"السابق\" : \"Previous\",\r\n        summary: i18next.language === \"ar\" ? \"الملخص\" : \"Summary\",\r\n      }}\r\n    >\r\n      {TreatmentsStep({\r\n        errorMessage: showErrorMessage(message, i18next),\r\n        data: treatmentsData,\r\n        isLoading: false\r\n      })}\r\n      {/* { CountriesStep({getSelectedTreatment}) } */}\r\n      {/* { CitiesStep({getSelectedTreatment}) } */}\r\n      {/* { FacilitiesStep({getSelectedTreatment, errorMessage: showErrorMessage(errorMessage, i18next)}) } */}\r\n      {PreferencesStep({ errorMessage: showErrorMessage(message, i18next) })}\r\n      {EmailStep({ errorMessage: showErrorMessage(message, i18next) })}\r\n    </Wizard>\r\n  );\r\n\r\n  return <WizardForm />;\r\n}\r\n\r\nexport default TreatmentsWizard;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport TreatmentsContext from \"store/treatments-store\";\r\nimport { UserService } from \"admin/services\";\r\nimport { Page } from \"common/components\";\r\nimport TreatmentsWizard from \"./Wizard\";\r\nimport AppContext from \"store/app-store\";\r\n\r\nconst initialValues = {\r\n  treatment: \"\",\r\n  preferences: {\r\n    q1: false,\r\n    q2: false,\r\n    q3: false,\r\n    q4: false,\r\n    q5: false,\r\n    q6: false,\r\n  },\r\n  email: \"\",\r\n};\r\n\r\nconst Treatments = () => {\r\n  const { getLang } = useContext(AppContext);\r\n  const title = \"Treatments\";\r\n  const [t] = useTranslation();\r\n  const treatmentsCtx = useContext(TreatmentsContext);\r\n  const navigate = useNavigate();\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const getTitle = () => t(title);\r\n\r\n  useState(() => {\r\n    if (!treatmentsCtx.data) {\r\n      treatmentsCtx.updateData({ ...initialValues });\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = async (values) => {\r\n    const userAccountResponse = await UserService.getUserByEmail(values.email);\r\n    if (!userAccountResponse.success) {\r\n      try {\r\n        const {\r\n          body: { userId },\r\n        } = await UserService.createUser({\r\n          email: values?.email,\r\n          password: values?.email.split(\"@\")[0],\r\n          status: \"incomplete\",\r\n        });\r\n\r\n        values.userId = userId;\r\n      } catch (error) {\r\n        setMessage(error.message);\r\n        return;\r\n      }\r\n    } else {\r\n      values.userId = userAccountResponse.body.userId;\r\n    }\r\n\r\n    treatmentsCtx.updateData(values);\r\n    navigate(\"/\" + getLang() + \"/treatments-summary\");\r\n  };\r\n\r\n  return (\r\n    <Page title={getTitle()}>\r\n      <TreatmentsWizard\r\n        onSubmit={onSubmit}\r\n        initialValues={treatmentsCtx.data}\r\n        errorMessage={message}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Treatments;\r\n","import React from \"react\";\r\nimport Treatments from \"client/components/patients/treatments\";\r\n\r\nconst TreatmentsPage = () => {\r\n  return (\r\n    <Treatments />\r\n  )\r\n}\r\n\r\nexport default TreatmentsPage;"],"names":["getAttachmentById","attachmentId","url","process","APIFilesRequest","method","City_API_URL","getAllCities","APIRequest","getCityByID","CityId","createCity","data","requestBody","updateCity","CityID","deleteCity","Country_API_URL","getAllCountries","getCountryByID","countryId","createCountry","updateCountry","countryID","deleteCountry","Doctor_API_URL","getAllDoctors","page","size","getDoctorByID","doctorId","createDoctor","doctorData","updateDoctor","doctorID","deleteDoctor","Facility_API_URL","getAllFacilities","getFacilityByID","FacilityId","createFacility","updateFacility","FacilityID","deleteFacility","Speciality_API_URL","getAllSpecialitiesWithPagination","getAllSpecialities","getSpecialityByID","specialityId","createSpeciality","specialityData","updateSpeciality","specialityID","deleteSpeciality","Treatment_API_URL","getAllTreatments","getTreatmentByID","TreatmentId","createTreatment","updateTreatment","TreatmentID","deleteTreatment","User_API_URL","getAllUsers","getUserByID","userId","createUser","userData","updateUser","userID","deleteUser","getUserByEmail","email","treatment","details","id","details_ar","useState","loading","useTranslation","i18next","className","Skeleton","styles","hidden","variant","width","height","animation","dangerouslySetInnerHTML","__html","language","props","fieldName","errorMessage","t","label","validate","values","errors","required","name","showerrorbeside","input","meta","find","parseInt","value","onChange","e","disabled","map","val","index","name_ar","getPreferences","textLabel","lang","preferenceOptions_ar","preferenceOptions_en","prefOption","idx","title","description","additionalLink","FormControlLabel","href","link","target","Tooltip","arrow","IconButton","Info","control","Checkbox","checked","FormControl","FormLabel","component","FormGroup","emailRegex","test","style","margin","type","InputField","showErrorMessage","onSubmit","initialValues","lables","setLoading","message","setMessage","treatmentsData","setTreatmentsData","useEffect","TreatmentService","treatmentServiceResponse","success","body","filter","active","s","document","classList","add","fetchData","remove","onSubmitHandler","WizardForm","next","previous","summary","TreatmentsStep","isLoading","PreferencesStep","EmailStep","preferences","q1","q2","q3","q4","q5","q6","getLang","useContext","AppContext","treatmentsCtx","TreatmentsContext","navigate","useNavigate","updateData","UserService","userAccountResponse","password","split","status"],"sourceRoot":""}