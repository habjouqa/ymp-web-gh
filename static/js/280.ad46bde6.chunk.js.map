{"version":3,"file":"static/js/280.ad46bde6.chunk.js","mappings":"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","sources":["admin/components/Doctors/AddUpdateForm.jsx","admin/components/Doctors/index.jsx","admin/Pages/DoctorsPage.js","admin/services/attachment.service.js","admin/services/cities.service.js","admin/services/countries.service.js","admin/services/doctors.service.js","admin/services/facilities.service.js","admin/services/speciality.service.js","admin/services/treatments.service.js","admin/services/users.service.js","client/components/dashboard/sidebar/menuItems.jsx","client/components/dashboard/sidebar/sidebar.jsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { InputField, Error } from \"common/components\";\r\nimport { required, PageMode } from \"common\";\r\nimport { SpecialityService, DoctorService } from \"admin/services\";\r\n\r\nfunction AddUpdateForm(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [specialitiesData, setSpecialitiesData] = useState();\r\n  const [file, setFile] = useState(null);\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  useEffect(async () => {\r\n    setLoading(true);\r\n    const response = await SpecialityService.getAllSpecialities();\r\n    setMessage(!!response?.message && response?.message);\r\n    if (response.success) {\r\n      setSpecialitiesData(response.body);\r\n    }\r\n\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const onSubmit = async (values) => {\r\n    console.log(`onSubmit :: ${JSON.stringify(values, 0, 2)}`);\r\n    setIsLoading(true);\r\n    // await sleep(1500);\r\n    // calling update profile API\r\n    const doctorData = {\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      phone: values.phone,\r\n      title: values.title,\r\n      specialityId: values.specialityId,\r\n      image: file,\r\n      addresses: [\r\n        {\r\n          city: values.city,\r\n          streetAddress: values.streetAddress,\r\n          name: \"\",\r\n          mapLocation: \"\",\r\n        },\r\n      ],\r\n    };\r\n    let response;\r\n    if (props.mode === PageMode.Update) {\r\n      if (!props.selectedDoctor.email) doctorData.email = values.email;\r\n      response = await DoctorService.updateDoctor(\r\n        props.selectedDoctor?.id,\r\n        doctorData\r\n      );\r\n    } else {\r\n      doctorData.password =\r\n        doctorData.firstName.toLowerCase() + doctorData.lastName.toLowerCase();\r\n      doctorData.email = values.email;\r\n      response = await DoctorService.createDoctor(doctorData);\r\n    }\r\n    setIsLoading(false);\r\n    if (!!!response.success && !response.success) {\r\n      setMessage(!!response.message && response.message);\r\n      return;\r\n    }\r\n    props.onClose(response.body);\r\n  };\r\n\r\n  const validate = async (values) => {\r\n    const errors = {};\r\n    if (!values.firstName) {\r\n      errors.firstName = required;\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = required;\r\n    }\r\n    if (!values.email) {\r\n      errors.email = required;\r\n    } else if (\r\n      !values.email\r\n        .toLowerCase()\r\n        .match(\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        )\r\n    ) {\r\n      errors.email = \"Invalid Email format!\";\r\n    }\r\n    if (!values.phone) {\r\n      errors.phone = required;\r\n    }\r\n    if (!values.title) {\r\n      errors.title = required;\r\n    }\r\n    if (!values.specialityId) {\r\n      errors.specialityId = required;\r\n    }\r\n    if (!values.image) {\r\n      errors.image = required;\r\n    }\r\n    if (!values.city) {\r\n      errors.city = required;\r\n    }\r\n    if (!values.streetAddress) {\r\n      errors.streetAddress = required;\r\n    }\r\n    return errors;\r\n  };\r\n  const convertBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  };\r\n  const uploadImage = async (e) => {\r\n    const file = e.target.files[0];\r\n    const base64 = await convertBase64(file);\r\n    setFile(base64);\r\n  };\r\n\r\n  let doctorForm = (\r\n    <Form\r\n      validate={validate}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        title: props.selectedDoctor?.title,\r\n        firstName: props.selectedDoctor?.firstName,\r\n        lastName: props.selectedDoctor?.lastName,\r\n        email: props.selectedDoctor?.email,\r\n        phone: props.selectedDoctor?.phone,\r\n        specialityId: props.selectedDoctor?.specialityId,\r\n        image: props.selectedDoctor?.image,\r\n        streetAddress: props.selectedDoctor?.addresses[0]?.streetAddress,\r\n        city: props.selectedDoctor?.addresses[0]?.city,\r\n      }}\r\n      render={({\r\n        handleSubmit,\r\n        onChange,\r\n        submitError,\r\n        form,\r\n        submitting,\r\n        pristine,\r\n        values,\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          {message && (\r\n            <div className=\"invalid-feedback d-block mb-2\">{message}</div>\r\n          )}\r\n          <h4 className=\"card-title\">Doctor Information:</h4>\r\n          <div className=\"row form-row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Title</label>\r\n                <Field\r\n                  name=\"title\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Speciality</label>\r\n                <Field name=\"specialityId\" showerrorbeside=\"true\">\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        defaultValue={values.specialityId}\r\n                        value={values.specialityId}\r\n                        {...input.select}\r\n                        onChange={(e) => {\r\n                          input.onChange(e); //final-form's onChange\r\n                        }}\r\n                      >\r\n                        <option value=\"\">\r\n                          {loading ? \"loading ...\" : \"Select Your Speciality\"}\r\n                        </option>\r\n                        {specialitiesData?.map((val, index) => (\r\n                          <option key={index} value={val.id}>\r\n                            {val.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    );\r\n                  }}\r\n                </Field>\r\n                <Error name={\"specialityId\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>First Name</label>\r\n                <Field\r\n                  name=\"firstName\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Last Name</label>\r\n                <Field\r\n                  name=\"lastName\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Email ID</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  className=\"form-control floating\"\r\n                  type=\"email\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Mobile</label>\r\n                <Field\r\n                  name=\"phone\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Image</label>\r\n                <Field name=\"image\" showerrorbeside=\"true\">\r\n                  {({ input: { value, onChange, ...input } }) => (\r\n                    <input\r\n                      {...input}\r\n                      type=\"file\"\r\n                      className=\"form-control floating\"\r\n                      onChange={(e) => {\r\n                        onChange(e);\r\n                        uploadImage(e);\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Field>\r\n                <Error name={\"image\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h4 className=\"card-title\">Address details:</h4>\r\n          <div className=\"row form-row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>City</label>\r\n                <Field\r\n                  name=\"city\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Street Address</label>\r\n                <Field\r\n                  name=\"streetAddress\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"submit-section\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary submit-btn\"\r\n              disabled={isLoading}\r\n            >\r\n              {!isLoading ? `Save` : \"\"}\r\n              {isLoading && (\r\n                <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n              )}\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary submit-btn\"\r\n              onClick={() => {\r\n                props.onClose(null);\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n\r\n  return <div>{doctorForm}</div>;\r\n}\r\nexport default AddUpdateForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport StickyBox from \"react-sticky-box\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { SpecialityService, DoctorService } from \"admin/services\";\r\nimport { AuthService } from \"client/services\"\r\nimport AddUpdateForm from \"./AddUpdateForm\";\r\nimport { DataTable } from \"common/components\";\r\nimport { PageMode } from \"common\";\r\nimport DashboardSidebar from \"client/components/dashboard/sidebar/sidebar.jsx\";\r\n\r\nfunction DoctorsList() {\r\n  const [t, i18n] = useTranslation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [messageDelete, setMessageDelete] = useState();\r\n  const [doctorsData, setDoctorsData] = useState();\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [dataPage, setDataPage] = useState();\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const [mode, setMode] = useState(PageMode.Add);\r\n  const handleClose = () => setShow(false);\r\n  const [specialitiesData, setSpecialitiesData] = useState();\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setShowSuccess(false);\r\n  };\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleShowDelete = () => {\r\n    setShowDelete(true);\r\n    setShowSuccess(false);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const uurrentUser = AuthService.getCurrentUser();\r\n    if (uurrentUser) {\r\n    console.log(\"🚀 ~ file: index.jsx ~ line 44 ~ useEffect ~ uurrentUser\", uurrentUser)\r\n    \r\n    }\r\n    setLoading(true);\r\n    const response = await DoctorService.getAllDoctors(pageIndex, 10);\r\n    setMessage(!!response?.message && response?.message);\r\n    if (response.success) {\r\n      const responseSpecialities = await SpecialityService.getAllSpecialities();\r\n      setMessage(\r\n        !!responseSpecialities?.message && responseSpecialities?.message\r\n      );\r\n      if (responseSpecialities.success) {\r\n        setSpecialitiesData(responseSpecialities.body);\r\n      }\r\n\r\n      const doctors = response?.body?.map((doctor) => {\r\n        return {\r\n          ...doctor,\r\n          name: `${doctor.firstName ? doctor.firstName : \"\"}${\r\n            doctor.lastName ? \" \" + doctor.lastName : \"\"\r\n          }`,\r\n          specialityId: specialitiesData?.find(\r\n            (s) => s.id === doctor.specialityId\r\n          )?.name,\r\n        };\r\n      });\r\n\r\n      setDoctorsData(doctors);\r\n      setDataPage({ ...response?.pagingation });\r\n    }\r\n\r\n    setLoading(false);\r\n  }, [pageIndex]);\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPageIndex(value - 1);\r\n    setPage(value);\r\n    setShowSuccess(false);\r\n  };\r\n\r\n  const deleteDoctorHandler = async (id) => {\r\n    setDeleting(true);\r\n\r\n    const response = await DoctorService.deleteDoctor(id);\r\n\r\n    setDeleting(false);\r\n    if (!!!response.success && !response.success) {\r\n      setMessageDelete(!!response.message && response.message);\r\n      return;\r\n    }\r\n    handleCloseDelete();\r\n    if (doctorsData?.length === 1) {\r\n      setPageIndex(pageIndex - 1);\r\n    }\r\n\r\n    setDoctorsData(doctorsData.filter((u) => u.id != id));\r\n  };\r\n\r\n  const columns = [\r\n    { id: \"title\", label: \"Title\" },\r\n    { id: \"name\", label: \"Name\" },\r\n    { id: \"email\", label: \"Email\" },\r\n    { id: \"specialityId\", label: \"Speciality\" },\r\n    { id: \"phone\", label: \"Phone\", className: \"text-center\" },\r\n  ];\r\n  let tableContent = (\r\n    <DataTable\r\n      columns={columns}\r\n      rows={doctorsData}\r\n      onPageChange={handlePageChange}\r\n      totalPages={dataPage?.totalPages}\r\n      page={page}\r\n      showActions={true}\r\n      onEdit={(doctor) => {\r\n        handleShow();\r\n        setSelectedDoctor(doctor);\r\n        setMode(PageMode.Update);\r\n      }}\r\n      onDelete={(doctor) => {\r\n        handleShowDelete();\r\n        setSelectedDoctor(doctor);\r\n        setMessageDelete(null);\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\r\n              <StickyBox offsetTop={20} offsetBottom={20}>\r\n                <DashboardSidebar />\r\n              </StickyBox>\r\n            </div>\r\n            <div className=\"col-md-7 col-lg-8 col-xl-9\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title float-left\">Doctors List</h4>\r\n                      <button\r\n                        className=\"btn btn-primary float-right\"\r\n                        onClick={() => {\r\n                          handleShow();\r\n                          setSelectedDoctor(null);\r\n                          setMode(PageMode.Add);\r\n                        }}\r\n                        data-toggle=\"modal\"\r\n                      >\r\n                        Add\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"card-body \">\r\n                      <div className=\"card card-table mb-0\">\r\n                        <div className=\"card-body\">\r\n                          <div className=\"table-responsive\">\r\n                            {message?.map((m, i) => (\r\n                              <div\r\n                                key={i}\r\n                                className=\"invalid-feedback d-block mb-2\"\r\n                              >\r\n                                {m}\r\n                              </div>\r\n                            ))}\r\n                            {loading ? (\r\n                              <div className=\"centered\">\r\n                                <h4>\r\n                                  <div>\r\n                                    <CircularProgress />\r\n                                  </div>\r\n                                  <div>\r\n                                    <span style={{ color: \"#15558d\" }}>\r\n                                      {t(\"GettingDoctors\")}\r\n                                    </span>\r\n                                  </div>\r\n                                </h4>\r\n                              </div>\r\n                            ) : (\r\n                              <>\r\n                                {showSuccess ? (\r\n                                  <div style={{ margin: \"20px\" }}>\r\n                                    <Alert severity=\"success\">{`Doctor have been ${mode} successfully!`}</Alert>\r\n                                  </div>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                                {tableContent}\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        scrollable={true}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">{`${mode} Doctor`}</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleClose}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            <div>\r\n              <AddUpdateForm\r\n                selectedDoctor={selectedDoctor}\r\n                mode={mode}\r\n                onClose={(doctor) => {\r\n                  handleClose();\r\n                  if (doctor) {\r\n                    if (mode === PageMode.Update) {\r\n                      const updatedDoctors = doctorsData.map((u) => {\r\n                        return u.id === doctor.id\r\n                          ? {\r\n                              ...doctor,\r\n                              name: `${\r\n                                doctor.firstName ? doctor.firstName : \"\"\r\n                              }${doctor.lastName ? \" \" + doctor.lastName : \"\"}`,\r\n                              specialityId: specialitiesData?.find(\r\n                                (s) => s.id === u.specialityId\r\n                              )?.name,\r\n                            }\r\n                          : u;\r\n                      });\r\n                      setDoctorsData(updatedDoctors);\r\n                    } else {\r\n                      const addedDoctor = {\r\n                        ...doctor,\r\n                        name: `${doctor.firstName ? doctor.firstName : \"\"}${\r\n                          doctor.lastName ? \" \" + doctor.lastName : \"\"\r\n                        }`,\r\n                        specialityId: specialitiesData?.find(\r\n                          (s) => s.id === doctor.specialityId\r\n                        )?.name,\r\n                      };\r\n                      if (doctorsData?.length === 10) {\r\n                        setDataPage({\r\n                          ...dataPage,\r\n                          totalPages: dataPage.totalPages + 1,\r\n                        });\r\n                      }\r\n                      setDoctorsData([...doctorsData, addedDoctor]);\r\n                    }\r\n                    setShowSuccess(true);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showDelete}\r\n        onHide={handleCloseDelete}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">Delete Doctor Confirmation</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleCloseDelete}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            {messageDelete && (\r\n              <div className=\"invalid-feedback d-block mb-2\">\r\n                {messageDelete}\r\n              </div>\r\n            )}\r\n            <h5 style={{ color: \"red\" }}>\r\n              Are you sure you want to delete the following doctor?\r\n            </h5>\r\n            <div>\r\n              <b>Doctor Name:</b>\r\n              {` ${\r\n                selectedDoctor?.firstName ? selectedDoctor?.firstName : \"\"\r\n              } ${selectedDoctor?.lastName ? selectedDoctor?.lastName : \"\"}`}\r\n            </div>\r\n            <div>\r\n              <b>Doctor Email:</b>\r\n              {` ${selectedDoctor?.email}`}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            className=\"btn btn-danger submit-btn\"\r\n            disabled={deleting}\r\n            onClick={() => {\r\n              deleteDoctorHandler(selectedDoctor.id);\r\n            }}\r\n          >\r\n            {!deleting ? `Delete` : \"\"}\r\n            {deleting && (\r\n              <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n            )}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary submit-btn\"\r\n            onClick={handleCloseDelete}\r\n          >\r\n            Close\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default DoctorsList;\r\n","import React from \"react\";\r\nimport DoctorsList from \"../components/Doctors/index\";\r\n\r\nfunction DoctorsPage() {\r\n  return <DoctorsList />;\r\n}\r\nexport default DoctorsPage;","import { APIFilesRequest } from \"common\";\r\n\r\nconst getAttachmentById = (attachmentId) => {\r\n  const url = `${process.env.REACT_APP_YMP_API}/api/v1/attachment/${attachmentId}`;\r\n  return APIFilesRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst AttachmentService = {\r\n  getAttachmentById,\r\n};\r\n\r\nexport default AttachmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst City_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/city`;\r\n\r\nconst getAllCities = () => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCityByID = (CityId) => {\r\n  const url = `${City_API_URL}/${CityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCity = (data) => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCity = (CityID, data) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCity = (CityID) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CityService = {\r\n  getAllCities,\r\n  getCityByID,\r\n  createCity,\r\n  updateCity,\r\n  deleteCity,\r\n};\r\n\r\nexport default CityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Country_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/country`;\r\n\r\nconst getAllCountries = () => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCountryByID = (countryId) => {\r\n  const url = `${Country_API_URL}/${countryId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCountry = (data) => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCountry = (countryID, data) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCountry = (countryID) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CountryService = {\r\n  getAllCountries,\r\n  getCountryByID,\r\n  createCountry,\r\n  updateCountry,\r\n  deleteCountry,\r\n};\r\n\r\nexport default CountryService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Doctor_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/doctor`;\r\n\r\nconst getAllDoctors = (page, size) => {\r\n  const url = `${Doctor_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getDoctorByID = (doctorId) => {\r\n  const url = `${Doctor_API_URL}/${doctorId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createDoctor = (doctorData) => {\r\n  const url = Doctor_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst updateDoctor = (doctorID, doctorData) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst deleteDoctor = (doctorID) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst DoctorService = {\r\n  getAllDoctors,\r\n  getDoctorByID,\r\n  createDoctor,\r\n  updateDoctor,\r\n  deleteDoctor,\r\n};\r\n\r\nexport default DoctorService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Facility_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/facility`;\r\n\r\nconst getAllFacilities = () => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getFacilityByID = (FacilityId) => {\r\n  const url = `${Facility_API_URL}/${FacilityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createFacility = (data) => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateFacility = (FacilityID, data) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteFacility = (FacilityID) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst FacilityService = {\r\n  getAllFacilities,\r\n  getFacilityByID,\r\n  createFacility,\r\n  updateFacility,\r\n  deleteFacility,\r\n};\r\n\r\nexport default FacilityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Speciality_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/speciality`;\r\n\r\nconst getAllSpecialitiesWithPagination = (page, size) => {\r\n  const url = `${Speciality_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getAllSpecialities = () => {\r\n  const url = `${Speciality_API_URL}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getSpecialityByID = (specialityId) => {\r\n  const url = `${Speciality_API_URL}/${specialityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createSpeciality = (specialityData) => {\r\n  const url = Speciality_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst updateSpeciality = (specialityID, specialityData) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst deleteSpeciality = (specialityID) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst SpecialityService = {\r\n  getAllSpecialitiesWithPagination,\r\n  getAllSpecialities,\r\n  getSpecialityByID,\r\n  createSpeciality,\r\n  updateSpeciality,\r\n  deleteSpeciality,\r\n};\r\n\r\nexport default SpecialityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Treatment_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/treatment`;\r\n\r\nconst getAllTreatments = () => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getTreatmentByID = (TreatmentId) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createTreatment = (data) => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateTreatment = (TreatmentID, data) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteTreatment = (TreatmentID) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst TreatmentService = {\r\n  getAllTreatments,\r\n  getTreatmentByID,\r\n  createTreatment,\r\n  updateTreatment,\r\n  deleteTreatment,\r\n};\r\n\r\nexport default TreatmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst User_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/user`;\r\n\r\nconst getAllUsers = (page, size) => {\r\n  const url = `${User_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByID = (userId) => {\r\n  const url = `${User_API_URL}/id/${userId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByEmail = (email) => {\r\n  const url = `${User_API_URL}/email/${email}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createUser = (userData) => {\r\n  const url = User_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst updateUser = (userID, userData) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst deleteUser = (userID) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst UserService = {\r\n  getAllUsers,\r\n  getUserByID,\r\n  createUser,\r\n  updateUser,\r\n  deleteUser,\r\n  getUserByEmail,\r\n};\r\n\r\nexport default UserService;\r\n","import { useTranslation } from \"react-i18next\";\r\nexport const adminMenuItems = (t, customActions = {}) => [\r\n  {\r\n    path: \"/en/account-profile\",\r\n    icon: \"fas fa-user-cog\",\r\n    label: t(\"ProfileSettings\"),\r\n    role: \"all\",\r\n  },\r\n  {\r\n    path: \"/en/account-appointments\",\r\n    icon: \"fas fa-calendar-alt\",\r\n    label: t(\"Appointments\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/specialities\",\r\n    icon: \"fas fa-stethoscope\",\r\n    label: t(\"Specialities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Doctors\",\r\n    icon: \"fas fa-users\",\r\n    label: t(\"Doctors\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Users\",\r\n    icon: \"fas fa-users\",\r\n    label: t(\"Users\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Countries\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Countries\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Cities\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Cities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Facilities\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Facilities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Treatments\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Treatments\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/account-change-password\",\r\n    icon: \"fas fa-lock\",\r\n    label: t(\"ChangePassword\"),\r\n    role: \"all\",\r\n  },\r\n  {\r\n    path: \"/\",\r\n    icon: \"fas fa-lock\",\r\n    label: t(\"logout\"),\r\n    role: \"all\",\r\n    onClick: customActions.logout,\r\n  },\r\n];\r\n","import AVATAR from \"client/assets/images/icons/male.png\";\r\nimport { UserService } from \"client/services\";\r\nimport { CountryCity } from \"common\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { adminMenuItems } from \"./menuItems\";\r\nimport { AuthService } from \"client/services\";\r\n\r\nexport const DashboardSidebar = () => {\r\n  const [t, i18nextLng] = useTranslation();\r\n  const pathname = window.location.pathname;\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [isLoggedIn, setIsLoggedIn] = useState();\r\n\r\n  const lang = \"en\";\r\n  useEffect(() => {\r\n    const fetchCurrentUser = async () => {\r\n      try {\r\n        const response = await UserService.getCurrentUser();\r\n        setCurrentUser(response?.body);\r\n      } catch (error) {\r\n        console.log(\"Error fetching current user:\", error);\r\n      }\r\n    };\r\n    fetchCurrentUser();\r\n  }, []);\r\n\r\n  const renderMenuItem = (item, index) => {\r\n    const shouldRenderItem =\r\n      item.role === \"all\" ||\r\n      (currentUser?.roles?.some((role) => role?.name === \"ROLE_ADMIN\") &&\r\n        item?.role === \"ROLE_ADMIN\");\r\n    if (!shouldRenderItem) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <li key={index} className={pathname.includes(item.path) ? \"active\" : \"\"}>\r\n        <Link\r\n          to={item.path}\r\n          onClick={(e) => {\r\n            if (item.onClick) {\r\n              e.preventDefault(); // Prevent default link behavior if there's an onClick\r\n              item.onClick(); // Call the function if it exists\r\n            }\r\n          }}\r\n        >\r\n          <i className={item.icon}></i>\r\n          <span>{item.label}</span>\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const customActions = {\r\n    logout: () => {\r\n      console.log(\"Logging out...\");\r\n      AuthService.logout();\r\n      setIsLoggedIn(false);\r\n      navigate(\"/\");\r\n    },\r\n    // Add other custom actions as needed\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <div className=\"widget-profile pro-widget-content\">\r\n        <div className=\"profile-info-widget\">\r\n          <a href=\"#0\" className=\"booking-doc-img\">\r\n            <img src={AVATAR} alt=\"User\" />\r\n          </a>\r\n          <div className=\"profile-det-info\">\r\n            <h3>{currentUser?.email}</h3>\r\n            <div className=\"patient-details\">\r\n              <h5>\r\n                <i className=\"fas fa-birthday-cake\"></i>{\" \"}\r\n                {currentUser?.dateOfBirth &&\r\n                  moment(currentUser?.dateOfBirth).format(\"DD MMM YYYY\")}\r\n                ,{\" \"}\r\n                {currentUser?.dateOfBirth &&\r\n                  moment(currentUser?.dateOfBirth, \"YYYY-MM-DD\")\r\n                    .month(0)\r\n                    .from(moment().month(0))}\r\n              </h5>\r\n              <h5 className=\"mb-0\">\r\n                <i className=\"fas fa-map-marker-alt\"></i>\r\n                {currentUser?.cityOfResidence &&\r\n                  currentUser?.cityOfResidence},{\" \"}\r\n                {currentUser?.countryOfResidence &&\r\n                  CountryCity.getCountryOfCode(currentUser?.countryOfResidence)\r\n                    .name}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dashboard-widget\">\r\n        <nav className=\"dashboard-menu\">\r\n          <ul>{adminMenuItems(t, customActions).map(renderMenuItem)}</ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DashboardSidebar;\r\n"],"names":["props","useState","isLoading","setIsLoading","loading","setLoading","message","setMessage","specialitiesData","setSpecialitiesData","file","setFile","useEffect","SpecialityService","response","success","body","onSubmit","values","console","log","JSON","stringify","doctorData","firstName","lastName","phone","title","specialityId","image","addresses","city","streetAddress","name","mapLocation","mode","PageMode","selectedDoctor","email","DoctorService","id","password","toLowerCase","onClose","validate","errors","required","match","convertBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","uploadImage","e","target","files","base64","doctorForm","initialValues","render","handleSubmit","onChange","submitError","form","submitting","pristine","className","noValidate","type","component","InputField","showerrorbeside","input","meta","defaultValue","value","select","map","val","index","disabled","onClick","useTranslation","t","deleting","setDeleting","show","setShow","showDelete","setShowDelete","showSuccess","setShowSuccess","messageDelete","setMessageDelete","doctorsData","setDoctorsData","setSelectedDoctor","page","setPage","dataPage","setDataPage","pageIndex","setPageIndex","setMode","handleClose","handleShow","handleCloseDelete","uurrentUser","AuthService","responseSpecialities","doctors","doctor","find","s","pagingation","deleteDoctorHandler","length","filter","u","tableContent","columns","label","rows","onPageChange","event","totalPages","showActions","onEdit","onDelete","offsetTop","offsetBottom","m","i","CircularProgress","style","color","margin","Alert","severity","Modal","onHide","size","scrollable","updatedDoctors","addedDoctor","centered","Doctors","getAttachmentById","attachmentId","url","process","APIFilesRequest","method","City_API_URL","getAllCities","APIRequest","getCityByID","CityId","createCity","data","requestBody","updateCity","CityID","deleteCity","Country_API_URL","getAllCountries","getCountryByID","countryId","createCountry","updateCountry","countryID","deleteCountry","Doctor_API_URL","getAllDoctors","getDoctorByID","doctorId","createDoctor","updateDoctor","doctorID","deleteDoctor","Facility_API_URL","getAllFacilities","getFacilityByID","FacilityId","createFacility","updateFacility","FacilityID","deleteFacility","Speciality_API_URL","getAllSpecialitiesWithPagination","getAllSpecialities","getSpecialityByID","createSpeciality","specialityData","updateSpeciality","specialityID","deleteSpeciality","Treatment_API_URL","getAllTreatments","getTreatmentByID","TreatmentId","createTreatment","updateTreatment","TreatmentID","deleteTreatment","User_API_URL","getAllUsers","getUserByID","userId","createUser","userData","updateUser","userID","deleteUser","getUserByEmail","adminMenuItems","customActions","path","icon","role","logout","DashboardSidebar","pathname","window","location","currentUser","setCurrentUser","navigate","useNavigate","setIsLoggedIn","fetchCurrentUser","UserService","href","src","AVATAR","alt","dateOfBirth","moment","format","month","from","cityOfResidence","countryOfResidence","CountryCity","item","roles","some","includes","to","preventDefault"],"sourceRoot":""}