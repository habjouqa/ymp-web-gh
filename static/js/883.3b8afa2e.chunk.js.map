{"version":3,"file":"static/js/883.3b8afa2e.chunk.js","mappings":"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","sources":["admin/components/Users/AddUpdateForm.jsx","admin/components/Users/index.jsx","admin/Pages/UsersPage.js","admin/services/attachment.service.js","admin/services/cities.service.js","admin/services/countries.service.js","admin/services/doctors.service.js","admin/services/facilities.service.js","admin/services/speciality.service.js","admin/services/treatments.service.js","admin/services/users.service.js","client/components/dashboard/sidebar/menuItems.jsx","client/components/dashboard/sidebar/sidebar.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { Field, Form, } from \"react-final-form\";\r\nimport { InputField, Error } from \"common/components\";\r\nimport { required, CountryCity, PageMode } from \"common\";\r\nimport { UserService } from \"admin/services\";\r\n\r\nfunction AddUpdateForm(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [selectedCountry, setSelectedCountry] = useState(\r\n    props.selectedUser?.countryOfResidence\r\n  );\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  const onSubmit = async (values) => {\r\n    console.log(`onSubmit :: ${JSON.stringify(values, 0, 2)}`);\r\n    setIsLoading(true);\r\n    // await sleep(1500);\r\n    // calling update profile API\r\n    const userData = {\r\n      firstName: values.firstName,\r\n      lastName: values.lastName,\r\n      dateOfBirth: values.dateOfBirth,\r\n      phone: values.phone,\r\n      gender: values.gender,\r\n      nationality: values.nationality,\r\n      countryOfResidence: values.countryOfResidence,\r\n      cityOfResidence: values.cityOfResidence,\r\n    };\r\n    let response;\r\n    if (props.mode === PageMode.Update) {\r\n      response = await UserService.updateUser(\r\n        props.selectedUser?.userId,\r\n        userData\r\n      );\r\n    } else {\r\n      userData.password =\r\n        userData.firstName.toLowerCase() + userData.lastName.toLowerCase();\r\n      userData.email = values.email;\r\n      response = await UserService.createUser(userData);\r\n    }\r\n    setIsLoading(false);\r\n    if (!!!response.success && !response.success) {\r\n      setMessage(!!response.message && response.message);\r\n      return;\r\n    }\r\n    props.onClose(response.body);\r\n  };\r\n\r\n  const validate = async (values) => {\r\n    const errors = {};\r\n    if (!values.firstName) {\r\n      errors.firstName = required;\r\n    }\r\n    if (!values.lastName) {\r\n      errors.lastName = required;\r\n    }\r\n    if (!values.email) {\r\n      errors.email = required;\r\n    } else if (\r\n      !values.email\r\n        .toLowerCase()\r\n        .match(\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        )\r\n    ) {\r\n      errors.email = \"Invalid Email format!\";\r\n    }\r\n    if (!values.phone) {\r\n      errors.phone = required;\r\n    }\r\n    if (!values.gender) {\r\n      errors.gender = required;\r\n    }\r\n    if (!values.dateOfBirth) {\r\n      errors.dateOfBirth = required;\r\n    }\r\n    if (!values.nationality) {\r\n      errors.nationality = required;\r\n    }\r\n    if (!values.countryOfResidence) {\r\n      errors.countryOfResidence = required;\r\n    }\r\n    if (!values.cityOfResidence) {\r\n      errors.cityOfResidence = required;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const optionsCountryList = useMemo(() => CountryCity.getCountriesList(), []);\r\n\r\n  let userForm = (\r\n    <Form\r\n      validate={validate}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: props.selectedUser?.firstName,\r\n        lastName: props.selectedUser?.lastName,\r\n        dateOfBirth: props.selectedUser?.dateOfBirth?.split(\"T\")[0],\r\n        email: props.selectedUser?.email,\r\n        phone: props.selectedUser?.phone,\r\n        gender: props.selectedUser?.gender,\r\n        nationality: props.selectedUser?.nationality,\r\n        countryOfResidence: props.selectedUser?.countryOfResidence,\r\n        cityOfResidence: props.selectedUser?.cityOfResidence,\r\n      }}\r\n      render={({\r\n        handleSubmit,\r\n        onChange,\r\n        submitError,\r\n        form,\r\n        submitting,\r\n        pristine,\r\n        values,\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          {message && (\r\n            <div className=\"invalid-feedback d-block mb-2\">{message}</div>\r\n          )}\r\n          <div className=\"row form-row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>First Name</label>\r\n                <Field\r\n                  name=\"firstName\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Last Name</label>\r\n                <Field\r\n                  name=\"lastName\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Date of Birth</label>\r\n                <div className=\"\">\r\n                  <Field\r\n                    name=\"dateOfBirth\"\r\n                    className=\"form-control floating datetimepicker\"\r\n                    type=\"date\"\r\n                    component={InputField}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Email ID</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  className=\"form-control floating\"\r\n                  type=\"email\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Mobile</label>\r\n                <Field\r\n                  name=\"phone\"\r\n                  className=\"form-control floating\"\r\n                  type=\"text\"\r\n                  component={InputField}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Gender</label>\r\n                <div className=\"col-md-10\">\r\n                  <div className=\"radio\">\r\n                    <Field\r\n                      id=\"male_radio\"\r\n                      name=\"gender\"\r\n                      value=\"Male\"\r\n                      type=\"radio\"\r\n                      component={InputField}\r\n                      hideerror=\"true\"\r\n                    />\r\n                    <label htmlFor=\"male_radio\">Male</label>\r\n                  </div>\r\n                  <div className=\"radio\">\r\n                    <Field\r\n                      id=\"male_radio\"\r\n                      name=\"gender\"\r\n                      value=\"Female\"\r\n                      type=\"radio\"\r\n                      component={InputField}\r\n                      hideerror=\"true\"\r\n                    />\r\n                    <label htmlFor=\"female_radio\">Female</label>\r\n                  </div>\r\n                  <Error name={\"gender\"} showerrorbeside=\"true\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Nationality</label>\r\n                <Field name=\"nationality\" showerrorbeside=\"true\">\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        defaultValue={values.nationality}\r\n                        {...input.select}\r\n                        onChange={(e) => {\r\n                          input.onChange(e); //final-form's onChange\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Your Nationality</option>\r\n                        {optionsCountryList.map((val, index) => (\r\n                          <option key={index} value={val.isoCode}>\r\n                            {val.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    );\r\n                  }}\r\n                </Field>\r\n                <Error name={\"nationality\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>Country</label>\r\n                <Field name=\"countryOfResidence\" showerrorbeside=\"true\">\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        defaultValue={values.countryOfResidence}\r\n                        {...input.select}\r\n                        onChange={(e) => {\r\n                          input.onChange(e); //final-form's onChange\r\n                          setSelectedCountry(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Country</option>\r\n                        {optionsCountryList.map((val, index) => (\r\n                          <option key={index} value={val.isoCode}>\r\n                            {val.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    );\r\n                  }}\r\n                </Field>\r\n                <Error name={\"countryOfResidence\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <div className=\"form-group\">\r\n                <label>City</label>\r\n                <Field name=\"cityOfResidence\" showerrorbeside=\"true\">\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        defaultValue={values.cityOfResidence}\r\n                        {...input.select}\r\n                        onChange={(e) => {\r\n                          input.onChange(e); //final-form's onChange\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select City</option>\r\n                        {CountryCity.getCitiesOfCountry(selectedCountry).map(\r\n                          (val, index) => (\r\n                            <option key={index} value={val.name}>\r\n                              {val.name}\r\n                            </option>\r\n                          )\r\n                        )}\r\n                      </select>\r\n                    );\r\n                  }}\r\n                </Field>\r\n                <Error name={\"cityOfResidence\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"submit-section\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary submit-btn\"\r\n              disabled={isLoading}\r\n            >\r\n              {!isLoading ? `Save` : \"\"}\r\n              {isLoading && (\r\n                <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n              )}\r\n            </button>\r\n            <button\r\n              className=\"btn btn-secondary submit-btn\"\r\n              onClick={() => {\r\n                props.onClose(null);\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n\r\n  return <div>{userForm}</div>;\r\n}\r\nexport default AddUpdateForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport StickyBox from \"react-sticky-box\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { UserService } from \"admin/services\";\r\nimport AddUpdateForm from \"./AddUpdateForm\";\r\nimport { DataTable } from \"common/components\";\r\nimport { CountryCity, PageMode } from \"common\";\r\nimport DashboardSidebar from \"client/components/dashboard/sidebar/sidebar.jsx\";\r\nfunction UsersList() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [messageDelete, setMessageDelete] = useState();\r\n  const [usersData, setUsersData] = useState();\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [dataPage, setDataPage] = useState();\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const [mode, setMode] = useState(PageMode.Add);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setShowSuccess(false);\r\n  };\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleShowDelete = () => {\r\n    setShowDelete(true);\r\n    setShowSuccess(false);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setLoading(true);\r\n    const response = await UserService.getAllUsers(pageIndex, 10);\r\n    setMessage(!!response?.message && response?.message);\r\n    if (response.success) {\r\n      const users = response?.body?.map((user) => {\r\n        return {\r\n          ...user,\r\n          name: `${user.firstName ? user.firstName : \"\"}${\r\n            user.lastName ? \" \" + user.lastName : \"\"\r\n          }`,\r\n          nationality: CountryCity.getCountryOfCode(user.nationality)?.name,\r\n          dateOfBirth: user.dateOfBirth?.split(\"T\")[0],\r\n          address: `${\r\n            user.countryOfResidence\r\n              ? CountryCity.getCountryOfCode(user.countryOfResidence).name\r\n              : \"\"\r\n          }${user.cityOfResidence ? \", \" + user.cityOfResidence : \"\"}`,\r\n        };\r\n      });\r\n\r\n      setUsersData(users);\r\n      setDataPage({ ...response?.pagingation });\r\n    }\r\n\r\n    setLoading(false);\r\n  }, [pageIndex]);\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setPageIndex(value - 1);\r\n    setPage(value);\r\n    setShowSuccess(false);\r\n  };\r\n\r\n  const deleteUserHandler = async (id) => {\r\n    setDeleting(true);\r\n\r\n    const response = await UserService.deleteUser(id);\r\n\r\n    setDeleting(false);\r\n    if (!!!response.success && !response.success) {\r\n      setMessageDelete(!!response.message && response.message);\r\n      return;\r\n    }\r\n    handleCloseDelete();\r\n    if (usersData?.length === 1) {\r\n      setPageIndex(pageIndex - 1);\r\n    }\r\n\r\n    setUsersData(usersData.filter((u) => u.userId != id));\r\n  };\r\n\r\n  const columns = [\r\n    { id: \"name\", label: \"Name\" },\r\n    { id: \"email\", label: \"Email\" },\r\n    { id: \"dateOfBirth\", label: \"Date of Birth\" },\r\n    { id: \"phone\", label: \"Phone\", className: \"text-center\" },\r\n    { id: \"gender\", label: \"Gender\", className: \"text-center\" },\r\n    { id: \"nationality\", label: \"Nationality\" },\r\n    { id: \"address\", label: \"Address\" },\r\n  ];\r\n  let tableContent = (\r\n    <>\r\n      <DataTable\r\n        columns={columns}\r\n        rows={usersData}\r\n        onPageChange={handlePageChange}\r\n        totalPages={dataPage?.totalPages}\r\n        page={page}\r\n        showActions={true}\r\n        onEdit={(user) => {\r\n          handleShow();\r\n          setSelectedUser(user);\r\n          setMode(PageMode.Update);\r\n        }}\r\n        onDelete={(user) => {\r\n          handleShowDelete();\r\n          setSelectedUser(user);\r\n          setMessageDelete(null);\r\n        }}\r\n      />\r\n      {/* <table className=\"table table-hover table-center mb-0\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Action</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Date of Birth</th>\r\n            <th className=\"text-center\">Phone</th>\r\n            <th className=\"text-center\">Gender</th>\r\n            <th>Nationality</th>\r\n            <th>Address</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {usersData &&\r\n            usersData.map((user, i) => (\r\n              <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>\r\n                  <div className=\"table-action\">\r\n                    <a\r\n                      onClick={() => {\r\n                        handleShow();\r\n                        setSelectedUser(user);\r\n                        setMode(PageMode.Update);\r\n                      }}\r\n                      className=\"btn btn-sm bg-info-light\"\r\n                      data-toggle=\"modal\"\r\n                      title=\"edit\"\r\n                    >\r\n                      <i className=\"fas fa-edit\" />\r\n                    </a>\r\n                    <a\r\n                      onClick={() => {\r\n                        handleShowDelete();\r\n                        setSelectedUser(user);\r\n                        setMessageDelete(null);\r\n                      }}\r\n                      className=\"btn btn-sm bg-danger-light\"\r\n                      title=\"delete\"\r\n                    >\r\n                      <i className=\"fas fa-trash-alt\" />\r\n                    </a>\r\n                  </div>\r\n                </td>\r\n                <td>{`${user.firstName ? user.firstName : \"\"}${\r\n                  user.lastName ? \" \" + user.lastName : \"\"\r\n                }`}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.dateOfBirth?.split(\"T\")[0]}</td>\r\n                <td className=\"text-center\">{user.phone}</td>\r\n                <td className=\"text-center\">{user.gender}</td>\r\n                <td>\r\n                  {user.nationality\r\n                    ? CountryCity.getCountryOfCode(user.nationality).name\r\n                    : \"\"}\r\n                </td>\r\n                <td>{`${\r\n                  user.countryOfResidence\r\n                    ? CountryCity.getCountryOfCode(user.countryOfResidence).name\r\n                    : \"\"\r\n                }${\r\n                  user.cityOfResidence ? \", \" + user.cityOfResidence : \"\"\r\n                }`}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        className=\"centered\"\r\n        count={dataPage?.totalPages}\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n        showFirstButton\r\n        showLastButton\r\n        page={page}\r\n        onChange={handlePageChange}\r\n      /> */}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\r\n              <StickyBox offsetTop={20} offsetBottom={20}>\r\n                <DashboardSidebar />\r\n              </StickyBox>\r\n            </div>\r\n            <div className=\"col-md-7 col-lg-8 col-xl-9\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title float-left\">Users List</h4>\r\n                      <button\r\n                        className=\"btn btn-primary float-right\"\r\n                        onClick={() => {\r\n                          handleShow();\r\n                          setSelectedUser(null);\r\n                          setMode(PageMode.Add);\r\n                        }}\r\n                        data-toggle=\"modal\"\r\n                      >\r\n                        Add\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"card-body \">\r\n                      <div className=\"card card-table mb-0\">\r\n                        <div className=\"card-body\">\r\n                          <div className=\"table-responsive\">\r\n                            {message && (\r\n                              <div className=\"invalid-feedback d-block mb-2\">\r\n                                {message}\r\n                              </div>\r\n                            )}\r\n                            {loading ? (\r\n                              <div className=\"centered\">\r\n                                <h4>\r\n                                  <div>\r\n                                    <CircularProgress />\r\n                                  </div>\r\n                                  <div>\r\n                                    <span style={{ color: \"#15558d\" }}>\r\n                                      getting users...\r\n                                    </span>\r\n                                  </div>\r\n                                </h4>\r\n                              </div>\r\n                            ) : (\r\n                              <>\r\n                                {showSuccess ? (\r\n                                  <div style={{ margin: \"20px\" }}>\r\n                                    <Alert severity=\"success\">{`User have been ${mode} successfully!`}</Alert>\r\n                                  </div>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                                {tableContent}\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        scrollable={true}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">{`${mode} User`}</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleClose}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            <div>\r\n              <AddUpdateForm\r\n                selectedUser={selectedUser}\r\n                mode={mode}\r\n                onClose={(user) => {\r\n                  handleClose();\r\n                  if (user) {\r\n                    if (mode === PageMode.Update) {\r\n                      const updatedUsers = usersData.map((u) => {\r\n                        return u.userId === user.userId\r\n                          ? {\r\n                              ...user,\r\n                              name: `${user.firstName ? user.firstName : \"\"}${\r\n                                user.lastName ? \" \" + user.lastName : \"\"\r\n                              }`,\r\n                              nationality: CountryCity.getCountryOfCode(\r\n                                user.nationality\r\n                              )?.name,\r\n                              dateOfBirth: user.dateOfBirth?.split(\"T\")[0],\r\n                              address: `${\r\n                                user.countryOfResidence\r\n                                  ? CountryCity.getCountryOfCode(\r\n                                      user.countryOfResidence\r\n                                    ).name\r\n                                  : \"\"\r\n                              }${\r\n                                user.cityOfResidence\r\n                                  ? \", \" + user.cityOfResidence\r\n                                  : \"\"\r\n                              }`,\r\n                            }\r\n                          : u;\r\n                      });\r\n                      setUsersData(updatedUsers);\r\n                    } else {\r\n                      const addedUser = {\r\n                        ...user,\r\n                        name: `${user.firstName ? user.firstName : \"\"}${\r\n                          user.lastName ? \" \" + user.lastName : \"\"\r\n                        }`,\r\n                        nationality: CountryCity.getCountryOfCode(\r\n                          user.nationality\r\n                        )?.name,\r\n                        dateOfBirth: user.dateOfBirth?.split(\"T\")[0],\r\n                        address: `${\r\n                          user.countryOfResidence\r\n                            ? CountryCity.getCountryOfCode(\r\n                                user.countryOfResidence\r\n                              ).name\r\n                            : \"\"\r\n                        }${\r\n                          user.cityOfResidence\r\n                            ? \", \" + user.cityOfResidence\r\n                            : \"\"\r\n                        }`,\r\n                      };\r\n                      if (usersData?.length === 10) {\r\n                        setDataPage({\r\n                          ...dataPage,\r\n                          totalPages: dataPage.totalPages + 1,\r\n                        });\r\n                      }\r\n                      setUsersData([...usersData, addedUser]);\r\n                    }\r\n                    setShowSuccess(true);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showDelete}\r\n        onHide={handleCloseDelete}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">Delete User Confirmation</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleCloseDelete}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            {messageDelete && (\r\n              <div className=\"invalid-feedback d-block mb-2\">\r\n                {messageDelete}\r\n              </div>\r\n            )}\r\n            <h5 style={{ color: \"red\" }}>\r\n              Are you sure you want to delete the following user?\r\n            </h5>\r\n            <div>\r\n              <b>User Name:</b>\r\n              {` ${selectedUser?.firstName ? selectedUser?.firstName : \"\"} ${\r\n                selectedUser?.lastName ? selectedUser?.lastName : \"\"\r\n              }`}\r\n            </div>\r\n            <div>\r\n              <b>User Email:</b>\r\n              {` ${selectedUser?.email}`}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            className=\"btn btn-danger submit-btn\"\r\n            disabled={deleting}\r\n            onClick={() => {\r\n              deleteUserHandler(selectedUser.userId);\r\n            }}\r\n          >\r\n            {!deleting ? `Delete` : \"\"}\r\n            {deleting && (\r\n              <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n            )}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary submit-btn\"\r\n            onClick={handleCloseDelete}\r\n          >\r\n            Close\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default UsersList;\r\n","import React from \"react\";\r\nimport UsersList from \"../components/Users/index\";\r\n\r\nfunction UsersPage() {\r\n  return <UsersList />;\r\n}\r\nexport default UsersPage;","import { APIFilesRequest } from \"common\";\r\n\r\nconst getAttachmentById = (attachmentId) => {\r\n  const url = `${process.env.REACT_APP_YMP_API}/api/v1/attachment/${attachmentId}`;\r\n  return APIFilesRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst AttachmentService = {\r\n  getAttachmentById,\r\n};\r\n\r\nexport default AttachmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst City_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/city`;\r\n\r\nconst getAllCities = () => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCityByID = (CityId) => {\r\n  const url = `${City_API_URL}/${CityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCity = (data) => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCity = (CityID, data) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCity = (CityID) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CityService = {\r\n  getAllCities,\r\n  getCityByID,\r\n  createCity,\r\n  updateCity,\r\n  deleteCity,\r\n};\r\n\r\nexport default CityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Country_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/country`;\r\n\r\nconst getAllCountries = () => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCountryByID = (countryId) => {\r\n  const url = `${Country_API_URL}/${countryId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCountry = (data) => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCountry = (countryID, data) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCountry = (countryID) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CountryService = {\r\n  getAllCountries,\r\n  getCountryByID,\r\n  createCountry,\r\n  updateCountry,\r\n  deleteCountry,\r\n};\r\n\r\nexport default CountryService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Doctor_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/doctor`;\r\n\r\nconst getAllDoctors = (page, size) => {\r\n  const url = `${Doctor_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getDoctorByID = (doctorId) => {\r\n  const url = `${Doctor_API_URL}/${doctorId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createDoctor = (doctorData) => {\r\n  const url = Doctor_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst updateDoctor = (doctorID, doctorData) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst deleteDoctor = (doctorID) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst DoctorService = {\r\n  getAllDoctors,\r\n  getDoctorByID,\r\n  createDoctor,\r\n  updateDoctor,\r\n  deleteDoctor,\r\n};\r\n\r\nexport default DoctorService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Facility_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/facility`;\r\n\r\nconst getAllFacilities = () => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getFacilityByID = (FacilityId) => {\r\n  const url = `${Facility_API_URL}/${FacilityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createFacility = (data) => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateFacility = (FacilityID, data) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteFacility = (FacilityID) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst FacilityService = {\r\n  getAllFacilities,\r\n  getFacilityByID,\r\n  createFacility,\r\n  updateFacility,\r\n  deleteFacility,\r\n};\r\n\r\nexport default FacilityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Speciality_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/speciality`;\r\n\r\nconst getAllSpecialitiesWithPagination = (page, size) => {\r\n  const url = `${Speciality_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getAllSpecialities = () => {\r\n  const url = `${Speciality_API_URL}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getSpecialityByID = (specialityId) => {\r\n  const url = `${Speciality_API_URL}/${specialityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createSpeciality = (specialityData) => {\r\n  const url = Speciality_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst updateSpeciality = (specialityID, specialityData) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst deleteSpeciality = (specialityID) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst SpecialityService = {\r\n  getAllSpecialitiesWithPagination,\r\n  getAllSpecialities,\r\n  getSpecialityByID,\r\n  createSpeciality,\r\n  updateSpeciality,\r\n  deleteSpeciality,\r\n};\r\n\r\nexport default SpecialityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Treatment_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/treatment`;\r\n\r\nconst getAllTreatments = () => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getTreatmentByID = (TreatmentId) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createTreatment = (data) => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateTreatment = (TreatmentID, data) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteTreatment = (TreatmentID) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst TreatmentService = {\r\n  getAllTreatments,\r\n  getTreatmentByID,\r\n  createTreatment,\r\n  updateTreatment,\r\n  deleteTreatment,\r\n};\r\n\r\nexport default TreatmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst User_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/user`;\r\n\r\nconst getAllUsers = (page, size) => {\r\n  const url = `${User_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByID = (userId) => {\r\n  const url = `${User_API_URL}/id/${userId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByEmail = (email) => {\r\n  const url = `${User_API_URL}/email/${email}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createUser = (userData) => {\r\n  const url = User_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst updateUser = (userID, userData) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst deleteUser = (userID) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst UserService = {\r\n  getAllUsers,\r\n  getUserByID,\r\n  createUser,\r\n  updateUser,\r\n  deleteUser,\r\n  getUserByEmail,\r\n};\r\n\r\nexport default UserService;\r\n","import { useTranslation } from \"react-i18next\";\r\nexport const adminMenuItems = (t, customActions = {}) => [\r\n  {\r\n    path: \"/en/account-profile\",\r\n    icon: \"fas fa-user-cog\",\r\n    label: t(\"ProfileSettings\"),\r\n    role: \"all\",\r\n  },\r\n  {\r\n    path: \"/en/account-appointments\",\r\n    icon: \"fas fa-calendar-alt\",\r\n    label: t(\"Appointments\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/specialities\",\r\n    icon: \"fas fa-stethoscope\",\r\n    label: t(\"Specialities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Doctors\",\r\n    icon: \"fas fa-users\",\r\n    label: t(\"Doctors\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Users\",\r\n    icon: \"fas fa-users\",\r\n    label: t(\"Users\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Countries\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Countries\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Cities\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Cities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Facilities\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Facilities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Treatments\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Treatments\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/account-change-password\",\r\n    icon: \"fas fa-lock\",\r\n    label: t(\"ChangePassword\"),\r\n    role: \"all\",\r\n  },\r\n  {\r\n    path: \"/\",\r\n    icon: \"fas fa-lock\",\r\n    label: t(\"logout\"),\r\n    role: \"all\",\r\n    onClick: customActions.logout,\r\n  },\r\n];\r\n","import AVATAR from \"client/assets/images/icons/male.png\";\r\nimport { UserService } from \"client/services\";\r\nimport { CountryCity } from \"common\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { adminMenuItems } from \"./menuItems\";\r\nimport { AuthService } from \"client/services\";\r\n\r\nexport const DashboardSidebar = () => {\r\n  const [t, i18nextLng] = useTranslation();\r\n  const pathname = window.location.pathname;\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [isLoggedIn, setIsLoggedIn] = useState();\r\n\r\n  const lang = \"en\";\r\n  useEffect(() => {\r\n    const fetchCurrentUser = async () => {\r\n      try {\r\n        const response = await UserService.getCurrentUser();\r\n        setCurrentUser(response?.body);\r\n      } catch (error) {\r\n        console.log(\"Error fetching current user:\", error);\r\n      }\r\n    };\r\n    fetchCurrentUser();\r\n  }, []);\r\n\r\n  const renderMenuItem = (item, index) => {\r\n    const shouldRenderItem =\r\n      item.role === \"all\" ||\r\n      (currentUser?.roles?.some((role) => role?.name === \"ROLE_ADMIN\") &&\r\n        item?.role === \"ROLE_ADMIN\");\r\n    if (!shouldRenderItem) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <li key={index} className={pathname.includes(item.path) ? \"active\" : \"\"}>\r\n        <Link\r\n          to={item.path}\r\n          onClick={(e) => {\r\n            if (item.onClick) {\r\n              e.preventDefault(); // Prevent default link behavior if there's an onClick\r\n              item.onClick(); // Call the function if it exists\r\n            }\r\n          }}\r\n        >\r\n          <i className={item.icon}></i>\r\n          <span>{item.label}</span>\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const customActions = {\r\n    logout: () => {\r\n      console.log(\"Logging out...\");\r\n      AuthService.logout();\r\n      setIsLoggedIn(false);\r\n      navigate(\"/\");\r\n    },\r\n    // Add other custom actions as needed\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <div className=\"widget-profile pro-widget-content\">\r\n        <div className=\"profile-info-widget\">\r\n          <a href=\"#0\" className=\"booking-doc-img\">\r\n            <img src={AVATAR} alt=\"User\" />\r\n          </a>\r\n          <div className=\"profile-det-info\">\r\n            <h3>{currentUser?.email}</h3>\r\n            <div className=\"patient-details\">\r\n              <h5>\r\n                <i className=\"fas fa-birthday-cake\"></i>{\" \"}\r\n                {currentUser?.dateOfBirth &&\r\n                  moment(currentUser?.dateOfBirth).format(\"DD MMM YYYY\")}\r\n                ,{\" \"}\r\n                {currentUser?.dateOfBirth &&\r\n                  moment(currentUser?.dateOfBirth, \"YYYY-MM-DD\")\r\n                    .month(0)\r\n                    .from(moment().month(0))}\r\n              </h5>\r\n              <h5 className=\"mb-0\">\r\n                <i className=\"fas fa-map-marker-alt\"></i>\r\n                {currentUser?.cityOfResidence &&\r\n                  currentUser?.cityOfResidence},{\" \"}\r\n                {currentUser?.countryOfResidence &&\r\n                  CountryCity.getCountryOfCode(currentUser?.countryOfResidence)\r\n                    .name}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dashboard-widget\">\r\n        <nav className=\"dashboard-menu\">\r\n          <ul>{adminMenuItems(t, customActions).map(renderMenuItem)}</ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DashboardSidebar;\r\n"],"names":["props","useState","isLoading","setIsLoading","message","setMessage","selectedUser","countryOfResidence","selectedCountry","setSelectedCountry","onSubmit","values","console","log","JSON","stringify","userData","firstName","lastName","dateOfBirth","phone","gender","nationality","cityOfResidence","mode","PageMode","UserService","userId","response","password","toLowerCase","email","success","onClose","body","validate","errors","required","match","optionsCountryList","useMemo","CountryCity","userForm","initialValues","split","render","handleSubmit","onChange","submitError","form","submitting","pristine","className","noValidate","name","type","component","InputField","id","value","hideerror","htmlFor","showerrorbeside","input","meta","defaultValue","select","e","map","val","index","isoCode","target","disabled","onClick","loading","setLoading","deleting","setDeleting","show","setShow","showDelete","setShowDelete","showSuccess","setShowSuccess","messageDelete","setMessageDelete","usersData","setUsersData","setSelectedUser","page","setPage","dataPage","setDataPage","pageIndex","setPageIndex","setMode","handleClose","handleShow","handleCloseDelete","useEffect","users","user","address","pagingation","deleteUserHandler","length","filter","u","tableContent","columns","label","rows","onPageChange","event","totalPages","showActions","onEdit","onDelete","offsetTop","offsetBottom","CircularProgress","style","color","margin","Alert","severity","Modal","onHide","size","scrollable","updatedUsers","addedUser","centered","Users","getAttachmentById","attachmentId","url","process","APIFilesRequest","method","City_API_URL","getAllCities","APIRequest","getCityByID","CityId","createCity","data","requestBody","updateCity","CityID","deleteCity","Country_API_URL","getAllCountries","getCountryByID","countryId","createCountry","updateCountry","countryID","deleteCountry","Doctor_API_URL","getAllDoctors","getDoctorByID","doctorId","createDoctor","doctorData","updateDoctor","doctorID","deleteDoctor","Facility_API_URL","getAllFacilities","getFacilityByID","FacilityId","createFacility","updateFacility","FacilityID","deleteFacility","Speciality_API_URL","getAllSpecialitiesWithPagination","getAllSpecialities","getSpecialityByID","specialityId","createSpeciality","specialityData","updateSpeciality","specialityID","deleteSpeciality","Treatment_API_URL","getAllTreatments","getTreatmentByID","TreatmentId","createTreatment","updateTreatment","TreatmentID","deleteTreatment","User_API_URL","getAllUsers","getUserByID","createUser","updateUser","userID","deleteUser","getUserByEmail","adminMenuItems","t","customActions","path","icon","role","logout","DashboardSidebar","useTranslation","pathname","window","location","currentUser","setCurrentUser","navigate","useNavigate","setIsLoggedIn","fetchCurrentUser","AuthService","href","src","AVATAR","alt","moment","format","month","from","item","roles","some","includes","to","preventDefault"],"sourceRoot":""}