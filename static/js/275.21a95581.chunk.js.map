{"version":3,"file":"static/js/275.21a95581.chunk.js","mappings":"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","sources":["admin/components/Treatments/FacilitiesTable.jsx","admin/components/Treatments/FacilityForm.jsx","admin/components/Treatments/AddUpdateForm.jsx","admin/components/Treatments/index.jsx","admin/Pages/TreatmentsPage.js","admin/services/attachment.service.js","admin/services/cities.service.js","admin/services/countries.service.js","admin/services/doctors.service.js","admin/services/facilities.service.js","admin/services/speciality.service.js","admin/services/treatments.service.js","admin/services/users.service.js","client/components/dashboard/sidebar/menuItems.jsx","client/components/dashboard/sidebar/sidebar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst FacilitiesTable = ({ data, onDelete }) => {\r\n  const [t] = useTranslation();\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-12\">\r\n        <div className=\"card\">\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover table-center mb-0\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center\">#</th>\r\n                  <th className=\"text-center\">{t(\"Treatment.Country\")}</th>\r\n                  <th className=\"text-center\">{t(\"Treatment.City\")}</th>\r\n                  <th className=\"text-center\">{t(\"Treatment.Facility\")}</th>\r\n                  <td></td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data &&\r\n                  data.length > 0 &&\r\n                  data.map((row, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td className=\"text-center\">{index + 1}</td>\r\n                        <td className=\"text-center\">{row.country.label}</td>\r\n                        <td className=\"text-center\">{row.city.label}</td>\r\n                        <td className=\"text-center\">{row.facility.label}</td>\r\n                        <td className=\"text-center\">\r\n                          <span\r\n                            onClick={() => onDelete(index)}\r\n                            title=\"remove\"\r\n                            style={{ cursor: \"pointer\", marginTop: \"44px\" }}\r\n                          >\r\n                            ❌\r\n                          </span>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacilitiesTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Error } from \"common/components\";\r\nimport { required } from \"common\";\r\n\r\nfunction FacilityForm({ onAdd, facilitiesData, countriesData, citiesData }) {\r\n  const [t] = useTranslation();\r\n  const [selectedCountry, setSelectedCountry] = useState();\r\n  const [selectedCity, setSelectedCity] = useState();\r\n  const [selectedFacility, setSelectedFacility] = useState();\r\n\r\n  useEffect(async () => {}, []);\r\n\r\n  const onSubmit = async (values) => {\r\n    const facility = {\r\n      facility: {\r\n        value: values.facility,\r\n        label: facilitiesData.find((c) => c.id == values.facility).name,\r\n      },\r\n      country: {\r\n        value: values.country,\r\n        label: countriesData.find((c) => c.id == values.country).name,\r\n      },\r\n      city: {\r\n        value: values.city,\r\n        label: citiesData.find((c) => c.id == values.city).name,\r\n      },\r\n    };\r\n    onAdd(facility);\r\n    console.log(`onSubmit :: ${JSON.stringify(values, 0, 2)}`);\r\n  };\r\n\r\n  const validate = async (values) => {\r\n    const errors = {};\r\n    if (!values.facility) {\r\n      errors.facility = required;\r\n    }\r\n    if (!values.country) {\r\n      errors.country = required;\r\n    }\r\n    if (!values.city) {\r\n      errors.city = required;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  let form = (\r\n    <Form\r\n      mutators={{\r\n        setValue: ([field, value], state, { changeValue }) => {\r\n          changeValue(state, field, () => value);\r\n        },\r\n      }}\r\n      validate={validate}\r\n      onSubmit={onSubmit}\r\n      render={({\r\n        handleSubmit,\r\n        values,\r\n        form: {\r\n          mutators: { setValue },\r\n        },\r\n      }) => (\r\n        <form onSubmit={handleSubmit} className=\"needs-validation\" noValidate>\r\n          <div className=\"row form-row\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <div className=\"form-group\">\r\n                <label>{t(\"Facility.Country\")}</label>\r\n                <Field name=\"country\" showerrorbeside=\"true\">\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        {...input.select}\r\n                        defaultValue={values.country}\r\n                        value={values.country}\r\n                        onChange={(e) => {\r\n                          input.onChange(e);\r\n                          setSelectedCountry(e.target.value);\r\n                          setValue(\"city\", \"\");\r\n                          setValue(\"facility\", \"\");\r\n                        }}\r\n                      >\r\n                        <option value=\"\">{t(\"Facility.SelectCountry\")}</option>\r\n                        {countriesData?.map((val, index) => (\r\n                          <option key={index} value={val.id}>\r\n                            {val.name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    );\r\n                  }}\r\n                </Field>\r\n                <Error name={\"country\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-4\">\r\n              <div className=\"form-group\">\r\n                <label>{t(\"Facility.City\")}</label>\r\n                <Field name=\"city\" showerrorbeside=\"true\">\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        {...input.select}\r\n                        defaultValue={values?.city}\r\n                        value={values?.city}\r\n                        disabled={\r\n                          !values?.country ||\r\n                          citiesData.findIndex(\r\n                            (c) => c.country?.id == selectedCountry\r\n                          ) < 0\r\n                        }\r\n                        onChange={(e) => {\r\n                          input.onChange(e);\r\n                          setSelectedCity(e.target.value);\r\n                          setValue(\"facility\", \"\");\r\n                        }}\r\n                      >\r\n                        <option value=\"\">\r\n                          {!!selectedCountry &&\r\n                          citiesData.findIndex(\r\n                            (c) => c.country?.id == selectedCountry\r\n                          ) < 0\r\n                            ? \"No cities found\"\r\n                            : t(\"Facility.SelectCity\")}\r\n                        </option>\r\n                        {citiesData\r\n                          ?.filter((c) => c.country?.id == selectedCountry)\r\n                          .map((val, index) => (\r\n                            <option key={index} value={val.id}>\r\n                              {val.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    );\r\n                  }}\r\n                </Field>\r\n                <Error name={\"city\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-4\">\r\n              <div className=\"form-group\">\r\n                <label>{t(\"Facility.Facility\")}</label>\r\n                <Field name=\"facility\" showerrorbeside=\"true\">\r\n                  {({ input, meta }) => {\r\n                    return (\r\n                      <select\r\n                        className=\"form-control select\"\r\n                        {...input.select}\r\n                        defaultValue={values.facility}\r\n                        value={values.facility}\r\n                        disabled={\r\n                          !values.city ||\r\n                          facilitiesData.findIndex(\r\n                            (c) => c.city?.id == selectedCity\r\n                          ) < 0\r\n                        }\r\n                        onChange={(e) => {\r\n                          input.onChange(e);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">\r\n                          {!!selectedCity &&\r\n                          facilitiesData.findIndex(\r\n                            (c) => c.city?.id == selectedCity\r\n                          ) < 0\r\n                            ? \"No facilities found\"\r\n                            : !values.city ||\r\n                              facilitiesData.findIndex(\r\n                                (c) => c.city?.id == selectedCity\r\n                              ) < 0\r\n                            ? \"\"\r\n                            : t(\"Treatment.SelectFacility\")}\r\n                        </option>\r\n                        {facilitiesData\r\n                          ?.filter((c) => c.city?.id == selectedCity)\r\n                          .map((val, index) => (\r\n                            <option key={index} value={val.id}>\r\n                              {val.name}\r\n                            </option>\r\n                          ))}\r\n                      </select>\r\n                    );\r\n                  }}\r\n                </Field>\r\n                <Error name={\"facility\"} showerrorbeside=\"true\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"submit-section\">\r\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\">\r\n              {t(`Facility.Add`)}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n\r\n  return <div>{form}</div>;\r\n}\r\nexport default FacilityForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport arrayMutators from \"final-form-arrays\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { InputField, FileField, Error } from \"common/components\";\r\nimport { PageMode, required } from \"common\";\r\nimport { TreatmentService, FacilityService, CountryService, CityService, AttachmentService } from \"admin/services\";\r\nimport FacilitiesTable from \"./FacilitiesTable\";\r\nimport FacilityForm from \"./FacilityForm\";\r\n\r\nfunction AddUpdateForm(props) {\r\n  const [t] = useTranslation();\r\n  const { mode, selectedTreatment, onClose } = props;\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [facilitiesData, setFacilitiesData] = useState([]);\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const [citiesData, setCitiesData] = useState([]);\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n  const [image, setImage] = useState();\r\n  const [uploadImage, setUploadImage] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n  const [selectedFacilities, setSelectedFacilities] = useState([]);\r\n  const handleClose = () => setShow(false);\r\n\r\n  useEffect(async () => {\r\n    if (selectedTreatment) {\r\n      setSelectedFacilities(\r\n        selectedTreatment?.facilities.map((f) => ({\r\n          facility: {\r\n            value: f.id,\r\n            label: f.name,\r\n          },\r\n          country: {\r\n            value: f.city.country.id,\r\n            label: f.city.country.name,\r\n          },\r\n          city: {\r\n            value: f.city.id,\r\n            label: f.city.name,\r\n          },\r\n        }))\r\n      );\r\n    }\r\n    if (mode === PageMode.Update && selectedTreatment?.attachment?.id) {\r\n      setImageLoading(true);\r\n    }\r\n    const facilityServiceResponse = await FacilityService.getAllFacilities();\r\n    const countryResponse = await CountryService.getAllCountries();\r\n    const cityResponse = await CityService.getAllCities();\r\n    setMessage(\r\n      !!facilityServiceResponse?.message && facilityServiceResponse?.message\r\n    );\r\n    if (facilityServiceResponse.success) {\r\n      setFacilitiesData(facilityServiceResponse.body);\r\n    }\r\n    if (countryResponse.success) {\r\n      setCountriesData(countryResponse.body);\r\n    }\r\n    if (cityResponse.success) {\r\n      setCitiesData(cityResponse.body);\r\n    }\r\n    if (mode === PageMode.Update && selectedTreatment?.attachment?.id) {\r\n      const responseAttachment = await AttachmentService.getAttachmentById(\r\n        selectedTreatment?.attachment?.id\r\n      );\r\n      if (responseAttachment.success) {\r\n        setImage(responseAttachment.body);\r\n        setUploadImage(false);\r\n      } else setImage(null);\r\n      setImageLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const onSubmit = async (values) => {\r\n    setIsLoading(true);\r\n    let treatmentData = {\r\n      name: values.name,\r\n      name_ar: values.name_ar,\r\n      facilities: selectedFacilities?.map((f) => f.facility.value),\r\n      details: values.details,\r\n      details_ar: values.details_ar,\r\n      active: mode === PageMode.Update ? values.active : true,\r\n    };\r\n    let requestData = new FormData();\r\n    requestData.append(\"request\", JSON.stringify(treatmentData, 0, 2));\r\n    if (uploadImage) requestData.append(\"image\", values.image[0]);\r\n\r\n    let response;\r\n    if (mode === PageMode.Update) {\r\n      response = await TreatmentService.updateTreatment(\r\n        selectedTreatment?.id,\r\n        requestData\r\n      );\r\n    } else {\r\n      response = await TreatmentService.createTreatment(requestData);\r\n    }\r\n\r\n    if (!!!response.success && !response.success) {\r\n      setIsLoading(false);\r\n      setMessage(!!response.message && response.message);\r\n      return;\r\n    }\r\n    setIsLoading(false);\r\n    onClose(response.body);\r\n  };\r\n\r\n  const validate = async (values) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n      errors.name = required;\r\n    }\r\n    if (!values.details) {\r\n      errors.details = required;\r\n    }\r\n    if (!values.image && uploadImage) {\r\n      errors.image = required;\r\n    }\r\n    if (selectedFacilities.length === 0) {\r\n      errors.facilities = required;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleAddFacility = (values) => {\r\n    setSelectedFacilities((prev) => [values, ...prev]);\r\n    setShow(false);\r\n  };\r\n  const handleDelete = (index) => {\r\n    setSelectedFacilities(\r\n      selectedFacilities.filter((a) => a !== selectedFacilities[index])\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <Form\r\n        initialValues={{\r\n          name: selectedTreatment?.name,\r\n          details: selectedTreatment?.details,\r\n          name_ar: selectedTreatment?.name_ar,\r\n          details_ar: selectedTreatment?.details_ar,\r\n          image: selectedTreatment?.image,\r\n        }}\r\n        validate={validate}\r\n        onSubmit={onSubmit}\r\n        mutators={{\r\n          ...arrayMutators,\r\n        }}\r\n        render={({\r\n          handleSubmit,\r\n          onChange,\r\n          submitError,\r\n          form: {\r\n            mutators: { push, pop },\r\n          },\r\n          form,\r\n          submitting,\r\n          pristine,\r\n          values,\r\n        }) => {\r\n          return (\r\n            <form\r\n              onSubmit={handleSubmit}\r\n              className=\"needs-validation\"\r\n              noValidate\r\n            >\r\n              {message && (\r\n                <div className=\"invalid-feedback d-block mb-2\">{message}</div>\r\n              )}\r\n              <div>\r\n                <div className=\"row form-row\">\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>{t(\"Treatment.Name\")}</label>\r\n                      <Field\r\n                        name=\"name\"\r\n                        className=\"form-control floating\"\r\n                        type=\"text\"\r\n                        component={InputField}\r\n                        placeholder={\"Name\"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6\" style={{direction:\"rtl\"}}>\r\n                    <div className=\"form-group\">\r\n                      <label>{t(\"Treatment.Name\")} - AR</label>\r\n                      <Field\r\n                        name=\"name_ar\"\r\n                        className=\"form-control floating\"\r\n                        type=\"text\"\r\n                        component={InputField}\r\n                        placeholder={\"الاسم\"}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      {imageLoading ? (\r\n                        <CircularProgress />\r\n                      ) : mode === PageMode.Update && image && !uploadImage ? (\r\n                        <>\r\n                          <img src={image?.fileUrl} alt={\"image\"} width={250} />\r\n                          <span\r\n                            title=\"remove\"\r\n                            onClick={() => setUploadImage(true)}\r\n                            style={{ cursor: \"pointer\", marginTop: \"44px\" }}\r\n                          >\r\n                            ❌\r\n                          </span>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <label>{t(\"Country.Image\")}</label>\r\n                          <FileField name=\"image\" />\r\n                          <Error name={\"image\"} showerrorbeside=\"true\" />\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <label>{t(\"Country.Details\")}</label>\r\n                      <Field\r\n                        name=\"details\"\r\n                        className=\"form-control\"\r\n                        type=\"textarea\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Write here the details...\"\r\n                        component={InputField}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-12\" style={{direction:\"rtl\"}}>\r\n                    <div className=\"form-group\">\r\n                      <label>{t(\"Country.Details\")} - AR</label>\r\n                      <Field\r\n                        name=\"details_ar\"\r\n                        className=\"form-control\"\r\n                        type=\"textarea\"\r\n                        rows=\"4\"\r\n                        placeholder=\"اكتب التفاصيل هنا ...\"\r\n                        component={InputField}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <button\r\n                        className=\"btn btn-secondary submit-btn\"\r\n                        type=\"button\"\r\n                        style={{ marginTop: \"34px\" }}\r\n                        onClick={() => {\r\n                          // push(\"facilities\", undefined);\r\n                          setShow(true);\r\n                        }}\r\n                      >\r\n                        <AddIcon />\r\n                        facility\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <FacilitiesTable\r\n                  data={selectedFacilities}\r\n                  onDelete={handleDelete}\r\n                />\r\n                <Error name={\"facilities\"} showerrorbeside=\"true\" />\r\n                {/* <FieldArray\r\n                  initialValue={selectedFacilities}\r\n                  name=\"facilities\"\r\n                  validate={requiredArray}\r\n                  showerrorbeside=\"true\"\r\n                >\r\n                  {({ fields }) =>\r\n                    fields.map((name, index) => (\r\n                      <div key={name}>\r\n                        <div className=\"row form-row\">\r\n                          <div className=\"col-12 col-md-4\">\r\n                            <div className=\"form-group\">\r\n                              <label>{t(\"Treatment.Country\")}</label>\r\n                              <Field\r\n                                name={`${name}.country`}\r\n                                component={SelectAdapter}\r\n                                options={countriesOptions}\r\n                                validate={selectRequired}\r\n                              />\r\n                              <Error\r\n                                name={`${name}.country`}\r\n                                showerrorbeside=\"true\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 col-md-4\">\r\n                            <div className=\"form-group\">\r\n                              <label>{t(\"Treatment.City\")}</label>\r\n                              <CitiesOptions\r\n                                countries={`${name}.country`}\r\n                                cities={`${name}.city`}\r\n                                citiesData={citiesData}\r\n                              >\r\n                                {(options) => (\r\n                                  <Field\r\n                                    name={`${name}.city`}\r\n                                    component={SelectAdapter}\r\n                                    options={options}\r\n                                    validate={selectRequired}\r\n                                    defaultValue={1}\r\n                                    value={1}\r\n                                    initialValue={\r\n                                      selectedFacilities &&\r\n                                      selectedFacilities[index] &&\r\n                                      selectedFacilities[index].city &&\r\n                                      options?.filter(\r\n                                        (option) =>\r\n                                          option.value ==\r\n                                          selectedFacilities[index].city.value\r\n                                      )[0]\r\n                                    }\r\n                                  />\r\n                                )}\r\n                              </CitiesOptions>\r\n                              <Error\r\n                                name={`${name}.city`}\r\n                                showerrorbeside=\"true\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 col-md-3\">\r\n                            <div className=\"form-group\">\r\n                              <label>{t(\"Treatment.Facility\")}</label>\r\n                              <FacilitiesOptions\r\n                                cities={`${name}.city`}\r\n                                facilities={`${name}.facility`}\r\n                                facilitirsData={facilitiesData}\r\n                              >\r\n                                {(options) => (\r\n                                  <Field\r\n                                    name={`${name}.facility`}\r\n                                    component={SelectAdapter}\r\n                                    options={options}\r\n                                    validate={selectRequired}\r\n                                    initialValue={\r\n                                      selectedFacilities &&\r\n                                      selectedFacilities[index] &&\r\n                                      selectedFacilities[index].facility &&\r\n                                      options?.filter(\r\n                                        (option) =>\r\n                                          option.value ==\r\n                                          selectedFacilities[index].facility\r\n                                            .value\r\n                                      )[0]\r\n                                    }\r\n                                  />\r\n                                )}\r\n                              </FacilitiesOptions>\r\n                              <Error\r\n                                name={`${name}.facility`}\r\n                                showerrorbeside=\"true\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n\r\n                          <span\r\n                            onClick={() => {\r\n                              fields.remove(index);\r\n                            }}\r\n                            style={{ cursor: \"pointer\", marginTop: \"39px\" }}\r\n                          >\r\n                            ❌\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  }\r\n                </FieldArray> */}\r\n              </div>\r\n              <div className=\"submit-section\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary submit-btn\"\r\n                  disabled={isLoading}\r\n                >\r\n                  {!isLoading ? t(`Treatment.Save`) : \"\"}\r\n                  {isLoading && (\r\n                    <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n                  )}\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary submit-btn\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    onClose(null);\r\n                  }}\r\n                >\r\n                  {t(\"Treatment.Close\")}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          );\r\n        }}\r\n      />\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        scrollable={false}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">Add Facility</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleClose}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            <div>\r\n              <FacilityForm\r\n                onAdd={handleAddFacility}\r\n                facilitiesData={facilitiesData}\r\n                countriesData={countriesData}\r\n                citiesData={citiesData}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddUpdateForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport StickyBox from \"react-sticky-box\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DashboardSidebar from \"client/components/dashboard/sidebar/sidebar.jsx\";\r\nimport { DataTable } from \"common/components\";\r\nimport { PageMode, TableInputType } from \"common\";\r\nimport { TreatmentService } from \"admin/services\";\r\nimport AddUpdateForm from \"./AddUpdateForm\";\r\nfunction TreatmentsList() {\r\n  const [t] = useTranslation();\r\n  const [loading, setLoading] = useState(false);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const [messageDelete, setMessageDelete] = useState();\r\n  const [treatmentsData, setTreatmentsData] = useState();\r\n  const [selectedTreatment, setSelectedTreatment] = useState(null);\r\n  const [mode, setMode] = useState(PageMode.Add);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setShowSuccess(false);\r\n  };\r\n  const handleCloseDelete = () => setShowDelete(false);\r\n  const handleShowDelete = () => {\r\n    setShowDelete(true);\r\n    setShowSuccess(false);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    setLoading(true);\r\n    const response = await TreatmentService.getAllTreatments();\r\n    setMessage(!!response?.message && response?.message);\r\n    if (response.success) {\r\n      setTreatmentsData(response.body);\r\n    }\r\n\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const deleteTreatmentHandler = async (id) => {\r\n    setDeleting(true);\r\n\r\n    const response = await TreatmentService.deleteTreatment(id);\r\n\r\n    setDeleting(false);\r\n    if (!!!response.success && !response.success) {\r\n      setMessageDelete(!!response.message && response.message);\r\n      return;\r\n    }\r\n    handleCloseDelete();\r\n    setTreatmentsData(treatmentsData.filter((u) => u.id != id));\r\n\r\n    if (!!!response.success && !response.success) {\r\n      setMessage(!!response?.message && response?.message);\r\n      // To-Do: implemet error msg\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const updateTreatmentStatusHandler = async (id, active) => {\r\n    setLoading(true);\r\n    let requestData = new FormData();\r\n    const treatmentData = {\r\n      active: !active,\r\n    };\r\n    requestData.append(\"request\", JSON.stringify(treatmentData, 0, 2));\r\n    const response = await TreatmentService.updateTreatment(id, requestData);\r\n\r\n    if (!!!response.success && !response.success) {\r\n      // To-Do: implemet error msg\r\n      setLoading(false);\r\n      setMessage(!!response?.message && response?.message);\r\n      return;\r\n    }\r\n\r\n    setTreatmentsData(\r\n      treatmentsData?.map((s) => {\r\n        return s.id === response?.body?.id\r\n          ? { ...s, active: response?.body?.active }\r\n          : s;\r\n      })\r\n    );\r\n    setLoading(false);\r\n  };\r\n  const columns = [\r\n    { id: \"name\", label: t(\"Treatment.Name\") },\r\n    { id: \"name_ar\", label: t(\"Treatment.Name\") + \" - AR\" },\r\n    { id: \"active\", label: t(\"Treatment.Active\"), type: TableInputType.Toggle },\r\n  ];\r\n  let tableContent = (\r\n    <DataTable\r\n      columns={columns}\r\n      rows={treatmentsData?.flat()}\r\n      showActions={true}\r\n      onEdit={(treatment) => {\r\n        handleShow();\r\n        setSelectedTreatment(treatment);\r\n        setMode(PageMode.Update);\r\n      }}\r\n      onDelete={(treatment) => {\r\n        handleShowDelete();\r\n        setSelectedTreatment(treatment);\r\n        setMessageDelete(null);\r\n      }}\r\n      onUpdateStatus={(treatment) => {\r\n        updateTreatmentStatusHandler(treatment.id, treatment.active);\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-lg-4 col-xl-3 theiaStickySidebar\">\r\n              <StickyBox offsetTop={20} offsetBottom={20}>\r\n                <DashboardSidebar />\r\n              </StickyBox>\r\n            </div>\r\n            <div className=\"col-md-7 col-lg-8 col-xl-9\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title float-left\">\r\n                        {t(\"Treatment.ListTitle\")}\r\n                      </h4>\r\n                      <button\r\n                        className=\"btn btn-primary float-right\"\r\n                        onClick={() => {\r\n                          handleShow();\r\n                          setSelectedTreatment(null);\r\n                          setMode(PageMode.Add);\r\n                        }}\r\n                        data-toggle=\"modal\"\r\n                      >\r\n                        {t(\"Treatment.Add\")}\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"card-body \">\r\n                      <div className=\"card card-table mb-0\">\r\n                        <div className=\"card-body\">\r\n                          <div className=\"table-responsive\">\r\n                            <div className=\"invalid-feedback d-block mb-2\">\r\n                              {message}\r\n                            </div>\r\n                            {loading ? (\r\n                              <div className=\"centered\">\r\n                                <h4>\r\n                                  <div>\r\n                                    <CircularProgress />\r\n                                  </div>\r\n                                  <div>\r\n                                    <span style={{ color: \"#15558d\" }}>\r\n                                      {t(\"Treatment.GettingTreatments\")}\r\n                                    </span>\r\n                                  </div>\r\n                                </h4>\r\n                              </div>\r\n                            ) : (\r\n                              <>\r\n                                {showSuccess ? (\r\n                                  <div style={{ margin: \"20px\" }}>\r\n                                    <Alert severity=\"success\">\r\n                                      {mode === PageMode.Add\r\n                                        ? t(\r\n                                            \"Treatment.AddingSuccessfullyMessage\"\r\n                                          )\r\n                                        : t(\r\n                                            \"Treatment.UpdatingSuccessfullyMessage\"\r\n                                          )}\r\n                                    </Alert>\r\n                                  </div>\r\n                                ) : (\r\n                                  <></>\r\n                                )}\r\n                                {tableContent}\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        scrollable={false}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">{`${t(mode)} ${t(\r\n            \"Treatment.Treatment\"\r\n          )}`}</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleClose}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            <div>\r\n              <AddUpdateForm\r\n                selectedTreatment={selectedTreatment}\r\n                mode={mode}\r\n                onClose={(treatment) => {\r\n                  handleClose();\r\n                  if (treatment) {\r\n                    if (mode === PageMode.Update) {\r\n                      const updatedTreatment = treatmentsData\r\n                        .flat()\r\n                        .map((u) => {\r\n                          return u.id === treatment.id\r\n                            ? {\r\n                                ...treatment,\r\n                              }\r\n                            : u;\r\n                        });\r\n                      setTreatmentsData(updatedTreatment);\r\n                    } else {\r\n                      const addedTreatment = {\r\n                        ...treatment,\r\n                      };\r\n                      setTreatmentsData([...treatmentsData, addedTreatment]);\r\n                    }\r\n                    setShowSuccess(true);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showDelete}\r\n        onHide={handleCloseDelete}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n        centered\r\n      >\r\n        <Modal.Header>\r\n          <h5 className=\"modal-title\">\r\n            {t(\"Treatment.DeleteConfirmationTitle\")}\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            data-dismiss=\"modal\"\r\n            aria-label=\"Close\"\r\n            onClick={handleCloseDelete}\r\n          >\r\n            <span aria-hidden=\"true\">×</span>\r\n          </button>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"modal-body\">\r\n            {messageDelete && (\r\n              <div className=\"invalid-feedback d-block mb-2\">\r\n                {messageDelete}\r\n              </div>\r\n            )}\r\n            <h5 style={{ color: \"red\" }}>\r\n              {t(\"Treatment.DeleteConfirmationMessage\")}\r\n            </h5>\r\n            <div>\r\n              <b>{t(\"Treatment.Treatment\")}:</b>\r\n              {` ${selectedTreatment?.name} `}\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            className=\"btn btn-danger submit-btn\"\r\n            disabled={deleting}\r\n            onClick={() => {\r\n              deleteTreatmentHandler(selectedTreatment.id);\r\n            }}\r\n          >\r\n            {!deleting ? t(`Treatment.Delete`) : \"\"}\r\n            {deleting && (\r\n              <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n            )}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary submit-btn\"\r\n            onClick={handleCloseDelete}\r\n          >\r\n            {t(\"Treatment.Close\")}\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default TreatmentsList;\r\n","import React from \"react\";\r\nimport TreatmentsList from \"../components/Treatments/index\";\r\n\r\nfunction TreatmentsPage() {\r\n  return <TreatmentsList />;\r\n}\r\nexport default TreatmentsPage;","import { APIFilesRequest } from \"common\";\r\n\r\nconst getAttachmentById = (attachmentId) => {\r\n  const url = `${process.env.REACT_APP_YMP_API}/api/v1/attachment/${attachmentId}`;\r\n  return APIFilesRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst AttachmentService = {\r\n  getAttachmentById,\r\n};\r\n\r\nexport default AttachmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst City_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/city`;\r\n\r\nconst getAllCities = () => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCityByID = (CityId) => {\r\n  const url = `${City_API_URL}/${CityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCity = (data) => {\r\n  const url = City_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCity = (CityID, data) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCity = (CityID) => {\r\n  const url = `${City_API_URL}/${CityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CityService = {\r\n  getAllCities,\r\n  getCityByID,\r\n  createCity,\r\n  updateCity,\r\n  deleteCity,\r\n};\r\n\r\nexport default CityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Country_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/country`;\r\n\r\nconst getAllCountries = () => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getCountryByID = (countryId) => {\r\n  const url = `${Country_API_URL}/${countryId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createCountry = (data) => {\r\n  const url = Country_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateCountry = (countryID, data) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteCountry = (countryID) => {\r\n  const url = `${Country_API_URL}/${countryID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst CountryService = {\r\n  getAllCountries,\r\n  getCountryByID,\r\n  createCountry,\r\n  updateCountry,\r\n  deleteCountry,\r\n};\r\n\r\nexport default CountryService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Doctor_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/doctor`;\r\n\r\nconst getAllDoctors = (page, size) => {\r\n  const url = `${Doctor_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getDoctorByID = (doctorId) => {\r\n  const url = `${Doctor_API_URL}/${doctorId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createDoctor = (doctorData) => {\r\n  const url = Doctor_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst updateDoctor = (doctorID, doctorData) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...doctorData },\r\n  });\r\n};\r\n\r\nconst deleteDoctor = (doctorID) => {\r\n  const url = `${Doctor_API_URL}/${doctorID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst DoctorService = {\r\n  getAllDoctors,\r\n  getDoctorByID,\r\n  createDoctor,\r\n  updateDoctor,\r\n  deleteDoctor,\r\n};\r\n\r\nexport default DoctorService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Facility_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/facility`;\r\n\r\nconst getAllFacilities = () => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getFacilityByID = (FacilityId) => {\r\n  const url = `${Facility_API_URL}/${FacilityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createFacility = (data) => {\r\n  const url = Facility_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateFacility = (FacilityID, data) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteFacility = (FacilityID) => {\r\n  const url = `${Facility_API_URL}/${FacilityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst FacilityService = {\r\n  getAllFacilities,\r\n  getFacilityByID,\r\n  createFacility,\r\n  updateFacility,\r\n  deleteFacility,\r\n};\r\n\r\nexport default FacilityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Speciality_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/speciality`;\r\n\r\nconst getAllSpecialitiesWithPagination = (page, size) => {\r\n  const url = `${Speciality_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getAllSpecialities = () => {\r\n  const url = `${Speciality_API_URL}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\nconst getSpecialityByID = (specialityId) => {\r\n  const url = `${Speciality_API_URL}/${specialityId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createSpeciality = (specialityData) => {\r\n  const url = Speciality_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst updateSpeciality = (specialityID, specialityData) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...specialityData },\r\n  });\r\n};\r\n\r\nconst deleteSpeciality = (specialityID) => {\r\n  const url = `${Speciality_API_URL}/${specialityID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst SpecialityService = {\r\n  getAllSpecialitiesWithPagination,\r\n  getAllSpecialities,\r\n  getSpecialityByID,\r\n  createSpeciality,\r\n  updateSpeciality,\r\n  deleteSpeciality,\r\n};\r\n\r\nexport default SpecialityService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst Treatment_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/treatment`;\r\n\r\nconst getAllTreatments = () => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getTreatmentByID = (TreatmentId) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createTreatment = (data) => {\r\n  const url = Treatment_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst updateTreatment = (TreatmentID, data) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: data,\r\n  });\r\n};\r\n\r\nconst deleteTreatment = (TreatmentID) => {\r\n  const url = `${Treatment_API_URL}/${TreatmentID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst TreatmentService = {\r\n  getAllTreatments,\r\n  getTreatmentByID,\r\n  createTreatment,\r\n  updateTreatment,\r\n  deleteTreatment,\r\n};\r\n\r\nexport default TreatmentService;\r\n","import { APIRequest } from \"common\";\r\n\r\nconst User_API_URL = `${process.env.REACT_APP_YMP_API}/api/v1/user`;\r\n\r\nconst getAllUsers = (page, size) => {\r\n  const url = `${User_API_URL}?page=${page}&size=${size}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByID = (userId) => {\r\n  const url = `${User_API_URL}/id/${userId}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst getUserByEmail = (email) => {\r\n  const url = `${User_API_URL}/email/${email}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"get\",\r\n  });\r\n};\r\n\r\nconst createUser = (userData) => {\r\n  const url = User_API_URL;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"post\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst updateUser = (userID, userData) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"put\",\r\n    requestBody: { ...userData },\r\n  });\r\n};\r\n\r\nconst deleteUser = (userID) => {\r\n  const url = `${User_API_URL}/${userID}`;\r\n  return APIRequest({\r\n    url: url,\r\n    method: \"delete\",\r\n  });\r\n};\r\n\r\nconst UserService = {\r\n  getAllUsers,\r\n  getUserByID,\r\n  createUser,\r\n  updateUser,\r\n  deleteUser,\r\n  getUserByEmail,\r\n};\r\n\r\nexport default UserService;\r\n","import { useTranslation } from \"react-i18next\";\r\nexport const adminMenuItems = (t, customActions = {}) => [\r\n  {\r\n    path: \"/en/account-profile\",\r\n    icon: \"fas fa-user-cog\",\r\n    label: t(\"ProfileSettings\"),\r\n    role: \"all\",\r\n  },\r\n  {\r\n    path: \"/en/account-appointments\",\r\n    icon: \"fas fa-calendar-alt\",\r\n    label: t(\"Appointments\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/specialities\",\r\n    icon: \"fas fa-stethoscope\",\r\n    label: t(\"Specialities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Doctors\",\r\n    icon: \"fas fa-users\",\r\n    label: t(\"Doctors\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Users\",\r\n    icon: \"fas fa-users\",\r\n    label: t(\"Users\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Countries\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Countries\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Cities\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Cities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Facilities\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Facilities\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/admin/Treatments\",\r\n    icon: \"fas fa-gear\",\r\n    label: t(\"Treatments\"),\r\n    role: \"ROLE_ADMIN\",\r\n  },\r\n  {\r\n    path: \"/en/account-change-password\",\r\n    icon: \"fas fa-lock\",\r\n    label: t(\"ChangePassword\"),\r\n    role: \"all\",\r\n  },\r\n  {\r\n    path: \"/\",\r\n    icon: \"fas fa-lock\",\r\n    label: t(\"logout\"),\r\n    role: \"all\",\r\n    onClick: customActions.logout,\r\n  },\r\n];\r\n","import AVATAR from \"client/assets/images/icons/male.png\";\r\nimport { UserService } from \"client/services\";\r\nimport { CountryCity } from \"common\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { adminMenuItems } from \"./menuItems\";\r\nimport { AuthService } from \"client/services\";\r\n\r\nexport const DashboardSidebar = () => {\r\n  const [t, i18nextLng] = useTranslation();\r\n  const pathname = window.location.pathname;\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [isLoggedIn, setIsLoggedIn] = useState();\r\n\r\n  const lang = \"en\";\r\n  useEffect(() => {\r\n    const fetchCurrentUser = async () => {\r\n      try {\r\n        const response = await UserService.getCurrentUser();\r\n        setCurrentUser(response?.body);\r\n      } catch (error) {\r\n        console.log(\"Error fetching current user:\", error);\r\n      }\r\n    };\r\n    fetchCurrentUser();\r\n  }, []);\r\n\r\n  const renderMenuItem = (item, index) => {\r\n    const shouldRenderItem =\r\n      item.role === \"all\" ||\r\n      (currentUser?.roles?.some((role) => role?.name === \"ROLE_ADMIN\") &&\r\n        item?.role === \"ROLE_ADMIN\");\r\n    if (!shouldRenderItem) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <li key={index} className={pathname.includes(item.path) ? \"active\" : \"\"}>\r\n        <Link\r\n          to={item.path}\r\n          onClick={(e) => {\r\n            if (item.onClick) {\r\n              e.preventDefault(); // Prevent default link behavior if there's an onClick\r\n              item.onClick(); // Call the function if it exists\r\n            }\r\n          }}\r\n        >\r\n          <i className={item.icon}></i>\r\n          <span>{item.label}</span>\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const customActions = {\r\n    logout: () => {\r\n      console.log(\"Logging out...\");\r\n      AuthService.logout();\r\n      setIsLoggedIn(false);\r\n      navigate(\"/\");\r\n    },\r\n    // Add other custom actions as needed\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-sidebar\">\r\n      <div className=\"widget-profile pro-widget-content\">\r\n        <div className=\"profile-info-widget\">\r\n          <a href=\"#0\" className=\"booking-doc-img\">\r\n            <img src={AVATAR} alt=\"User\" />\r\n          </a>\r\n          <div className=\"profile-det-info\">\r\n            <h3>{currentUser?.email}</h3>\r\n            <div className=\"patient-details\">\r\n              <h5>\r\n                <i className=\"fas fa-birthday-cake\"></i>{\" \"}\r\n                {currentUser?.dateOfBirth &&\r\n                  moment(currentUser?.dateOfBirth).format(\"DD MMM YYYY\")}\r\n                ,{\" \"}\r\n                {currentUser?.dateOfBirth &&\r\n                  moment(currentUser?.dateOfBirth, \"YYYY-MM-DD\")\r\n                    .month(0)\r\n                    .from(moment().month(0))}\r\n              </h5>\r\n              <h5 className=\"mb-0\">\r\n                <i className=\"fas fa-map-marker-alt\"></i>\r\n                {currentUser?.cityOfResidence &&\r\n                  currentUser?.cityOfResidence},{\" \"}\r\n                {currentUser?.countryOfResidence &&\r\n                  CountryCity.getCountryOfCode(currentUser?.countryOfResidence)\r\n                    .name}\r\n              </h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dashboard-widget\">\r\n        <nav className=\"dashboard-menu\">\r\n          <ul>{adminMenuItems(t, customActions).map(renderMenuItem)}</ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DashboardSidebar;\r\n"],"names":["data","onDelete","useTranslation","t","className","length","map","row","index","country","label","city","facility","onClick","title","style","cursor","marginTop","onAdd","facilitiesData","countriesData","citiesData","useState","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","useEffect","onSubmit","values","value","find","c","id","name","console","log","JSON","stringify","validate","errors","required","form","mutators","setValue","state","field","changeValue","render","handleSubmit","noValidate","showerrorbeside","input","meta","select","defaultValue","onChange","e","target","val","disabled","findIndex","filter","type","props","mode","selectedTreatment","onClose","isLoading","setIsLoading","message","setMessage","setFacilitiesData","setCountriesData","setCitiesData","imageLoading","setImageLoading","image","setImage","uploadImage","setUploadImage","show","setShow","selectedFacilities","setSelectedFacilities","handleClose","facilities","f","PageMode","attachment","FacilityService","facilityServiceResponse","CountryService","countryResponse","CityService","cityResponse","success","body","AttachmentService","responseAttachment","treatmentData","name_ar","details","details_ar","active","requestData","FormData","append","TreatmentService","response","handleDelete","a","initialValues","arrayMutators","submitError","push","pop","submitting","pristine","component","InputField","placeholder","direction","CircularProgress","src","fileUrl","alt","width","rows","Add","preventDefault","Modal","onHide","size","scrollable","centered","prev","loading","setLoading","deleting","setDeleting","showDelete","setShowDelete","showSuccess","setShowSuccess","messageDelete","setMessageDelete","treatmentsData","setTreatmentsData","setSelectedTreatment","setMode","handleShow","handleCloseDelete","deleteTreatmentHandler","u","updateTreatmentStatusHandler","s","columns","TableInputType","tableContent","flat","showActions","onEdit","treatment","onUpdateStatus","offsetTop","offsetBottom","color","margin","Alert","severity","updatedTreatment","addedTreatment","Treatments","getAttachmentById","attachmentId","url","process","APIFilesRequest","method","City_API_URL","getAllCities","APIRequest","getCityByID","CityId","createCity","requestBody","updateCity","CityID","deleteCity","Country_API_URL","getAllCountries","getCountryByID","countryId","createCountry","updateCountry","countryID","deleteCountry","Doctor_API_URL","getAllDoctors","page","getDoctorByID","doctorId","createDoctor","doctorData","updateDoctor","doctorID","deleteDoctor","Facility_API_URL","getAllFacilities","getFacilityByID","FacilityId","createFacility","updateFacility","FacilityID","deleteFacility","Speciality_API_URL","getAllSpecialitiesWithPagination","getAllSpecialities","getSpecialityByID","specialityId","createSpeciality","specialityData","updateSpeciality","specialityID","deleteSpeciality","Treatment_API_URL","getAllTreatments","getTreatmentByID","TreatmentId","createTreatment","updateTreatment","TreatmentID","deleteTreatment","User_API_URL","getAllUsers","getUserByID","userId","createUser","userData","updateUser","userID","deleteUser","getUserByEmail","email","adminMenuItems","customActions","path","icon","role","logout","DashboardSidebar","pathname","window","location","currentUser","setCurrentUser","navigate","useNavigate","setIsLoggedIn","fetchCurrentUser","UserService","AuthService","href","AVATAR","dateOfBirth","moment","format","month","from","cityOfResidence","countryOfResidence","CountryCity","item","roles","some","includes","to"],"sourceRoot":""}