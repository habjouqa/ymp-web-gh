{"version":3,"file":"static/js/52.99a83b17.chunk.js","mappings":"uQAgJA,MAzIA,WACE,IACA,GAA8BA,EAAAA,EAAAA,YAAU,eAAjCC,EAAO,KAAEC,EAAU,KAC1B,GAAkCF,EAAAA,EAAAA,WAAS,GAAM,eAA1CG,EAAS,KAAEC,EAAY,KAC9B,GAAwCJ,EAAAA,EAAAA,YAAU,eAA3CK,EAAY,KAAEC,EAAe,MAGpCC,EAAAA,EAAAA,YAAU,WAER,OADAC,SAASC,KAAKC,UAAUC,IAAI,gBACrB,WACLH,SAASC,KAAKC,UAAUE,OAAO,mBAEhC,IAEH,IAAMC,EAAQ,mCAAG,WAAOC,GAAM,uEAI5B,OAHAR,GAAgB,GAChBF,GAAa,GACbW,QAAQC,IAAI,eAAD,OAAgBC,KAAKC,UAAUJ,EAAQ,EAAG,KACrD,SACuBK,EAAAA,EAAAA,eAA2BL,EAAOM,OAAO,KAAD,EAC3C,GADdC,EAAQ,OACdjB,GAAa,GAENiB,EAASC,SAAYD,EAASC,QAAO,iBACS,OAAnDpB,IAAamB,EAASpB,SAAWoB,EAASpB,SAAS,2BAIrDK,IAAkBe,EAASC,SAAWD,EAASC,SAAS,4CACzD,gBAda,sCAgBRC,EAAQ,mCAAG,WAAOT,GAAM,uEAY3B,OAXKU,EAAS,GACVV,EAAOM,MAGTN,EAAOM,MACLK,cACAC,MACC,2JAGJF,EAAOJ,MAAQ,yBARfI,EAAOJ,MAhCG,WAyCX,kBACMI,GAAM,2CACd,gBAda,sCAgBd,OACE,gBAAKG,UAAU,UAAS,UACtB,gBAAKA,UAAU,kBAAiB,UAC9B,gBAAKA,UAAU,6BAA4B,UACzC,gBAAKA,UAAU,WAAU,UACvB,iBAAKA,UAAU,kBAAiB,UAC7BtB,GACC,SAAC,KAAgB,CACfuB,KAAM,UACNC,QAAS,UACTC,IAAK,0DAGP,IAEF,iBAAKH,UAAU,gDAA+C,WAC5D,gBAAKA,UAAU,+BAA8B,UAC3C,gBACEI,IAAKC,EACLL,UAAU,YACVM,IAAI,oBAGR,iBAAKN,UAAU,iCAAgC,WAC7C,iBAAKA,UAAU,eAAc,WAC3B,8CACA,cAAGA,UAAU,mBAAkB,+DAIjC,SAAC,KAAI,CACHJ,SAAUA,EACVV,SAAUA,EACVqB,OAAQ,kBACNC,EAAY,EAAZA,aAKArB,GAJW,EAAXsB,YACI,EAAJC,KACU,EAAVC,WACQ,EAARC,SACM,EAANzB,QAAM,OAEN,kBACED,SAAUsB,EACVR,UAAU,mBACVa,YAAU,aAEV,gBAAKb,UAAU,gCAA+B,SAC3C1B,KAEH,gBACE0B,UAAS,sCACD,OAANb,QAAM,IAANA,GAAa,QAAP,EAANA,EAAQM,aAAK,WAAP,EAAN,EAAeqB,QAAS,EAAI,UAAY,IACvC,UAEH,SAAC,KAAK,CACJC,KAAK,QACLf,UAAU,wBACVgB,MAAM,QACNf,KAAK,OACLgB,WAAW,cACXC,UAAWC,EAAAA,QAGf,gBAAKnB,UAAU,aAAY,UACzB,UAAC,KAAI,CAACoB,GAAG,SAASpB,UAAU,cAAa,oCACf,UAG5B,oBACEA,UAAU,6CACVC,KAAK,SACLoB,SAAU7C,EAAU,UAElBA,EAA+B,GAAtB,iBACVA,IACC,iBAAMwB,UAAU,qEC1H5C,MAHA,WACE,OAAO,SAAC,EAAc","sources":["client/components/password/ForgotPassword.jsx","client/Pages/ForgotPasswordPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AlertDismissible, InputField } from \"common/components\";\r\nimport loginBanner from \"../../assets/images/login-banner.png\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nfunction ForgotPassword() {\r\n  const required = `Required`;\r\n  const [message, setMessage] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [forgotStatus, setForgotStatus] = useState();\r\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n  \r\n  useEffect(() => {\r\n    document.body.classList.add(\"account-page\");\r\n    return () => {\r\n      document.body.classList.remove(\"account-page\");\r\n    };\r\n  }, []);\r\n\r\n  const onSubmit = async (values) => {\r\n    setForgotStatus(false);\r\n    setIsLoading(true);\r\n    console.log(`onSubmit :: ${JSON.stringify(values, 0, 2)}`);\r\n    // await sleep(1500);\r\n    const response = await AuthService.forgotPassword(values.email);\r\n    setIsLoading(false);\r\n\r\n    if (!!!response.success && !response.success) {\r\n      setMessage(!!response.message && response.message);\r\n      return;\r\n    }\r\n\r\n    setForgotStatus(!!response.success && response.success);\r\n  };\r\n\r\n  const validate = async (values) => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n      errors.email = required;\r\n    } else if (\r\n      !values.email\r\n        .toLowerCase()\r\n        .match(\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        )\r\n    ) {\r\n      errors.email = \"Invalid Email format!\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"account-content\">\r\n              {forgotStatus ? (\r\n                <AlertDismissible\r\n                  type={\"success\"}\r\n                  boldMsg={\"Success\"}\r\n                  msg={\"A reset link was sent to you, please check your inbox\"}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className=\"row align-items-center justify-content-center\">\r\n                <div className=\"col-md-7 col-lg-6 login-left\">\r\n                  <img\r\n                    src={loginBanner}\r\n                    className=\"img-fluid\"\r\n                    alt=\"Login Banner\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-12 col-lg-6 login-right\">\r\n                  <div className=\"login-header\">\r\n                    <h3>Forgot Password?</h3>\r\n                    <p className=\"small text-muted\">\r\n                      Enter your email to get a password reset link\r\n                    </p>\r\n                  </div>\r\n                  <Form\r\n                    validate={validate}\r\n                    onSubmit={onSubmit}\r\n                    render={({\r\n                      handleSubmit,\r\n                      submitError,\r\n                      form,\r\n                      submitting,\r\n                      pristine,\r\n                      values,\r\n                    }) => (\r\n                      <form\r\n                        onSubmit={handleSubmit}\r\n                        className=\"needs-validation\"\r\n                        noValidate\r\n                      >\r\n                        <div className=\"invalid-feedback d-block mb-2\">\r\n                          {message}\r\n                        </div>\r\n                        <div\r\n                          className={`form-group form-focus mt-4 ${\r\n                            values?.email?.length > 0 ? \"focused\" : \"\"\r\n                          }`}\r\n                        >\r\n                          <Field\r\n                            name=\"email\"\r\n                            className=\"form-control floating\"\r\n                            label=\"Email\"\r\n                            type=\"text\"\r\n                            label_type=\"focus_label\"\r\n                            component={InputField}\r\n                          />\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <Link to=\"/login\" className=\"forgot-link\">\r\n                            Remember your password?{\" \"}\r\n                          </Link>\r\n                        </div>\r\n                        <button\r\n                          className=\"btn btn-primary btn-block btn-lg login-btn\"\r\n                          type=\"submit\"\r\n                          disabled={isLoading}\r\n                        >\r\n                          {!isLoading ? `Reset Password` : \"\"}\r\n                          {isLoading && (\r\n                            <span className=\"spinner-border spinner-border-sm mb-1\"></span>\r\n                          )}\r\n                        </button>\r\n                      </form>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React from \"react\";\r\nimport ForgotPassword from \"../components/password/ForgotPassword\";\r\n\r\nfunction ForgotPasswordPage() {\r\n  return <ForgotPassword />;\r\n}\r\nexport default ForgotPasswordPage;"],"names":["useState","message","setMessage","isLoading","setIsLoading","forgotStatus","setForgotStatus","useEffect","document","body","classList","add","remove","onSubmit","values","console","log","JSON","stringify","AuthService","email","response","success","validate","errors","toLowerCase","match","className","type","boldMsg","msg","src","loginBanner","alt","render","handleSubmit","submitError","form","submitting","pristine","noValidate","length","name","label","label_type","component","InputField","to","disabled"],"sourceRoot":""}